{"version":3,"sources":["components/toggleswitch.js","components/newpost/newpost.js","services/postServices.js"],"names":["Toggleswitch","label","handlePaid","className","type","name","id","onChange","htmlFor","Newpost","loggedInUser","useContext","LoggedInUserContext","user","useState","fileurl","setfileurl","files","setFiles","paid","setPaid","caption","setCaption","title","setTitle","price","setPrice","progress","setProgress","history","useHistory","progressfn","onUploadProgress","progressEvent","progressper","Math","round","loaded","total","console","log","handleSubmit","a","postByUsername","username","data","push","BOOKSHELL","response","progressUpdate","width","onClick","placeholder","e","target","value","icon","faImage","style","opacity","position","left","length","URL","createObjectURL","reader","FileReader","readAsDataURL","onload","baseURL","result","height","border","workerUrl","fileUrl","alignItems","display","fontSize","justifyContent","ReactDOM","createPortal","document","getElementById","apiEndpoint","apiUrl","axios","post","Error","error","getUserMaterialByUsername","logginUserId","pageNumber","limit","get","params","page","getMaterialByTitle","buyMaterialById","materialId","userId","author","getUserPurcMaterialByUserId","addReview","message","getReviewByMaterialId","checkPurchased"],"mappings":"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","file":"static/js/6.20013d47.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function Toggleswitch({ label, handlePaid, }) {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                {label}{\" \"}\r\n                <div className=\"toggle-switch\">\r\n                    <input type=\"checkbox\" className=\"checkbox\"\r\n                        name={label} id={label} onChange={handlePaid} />\r\n                    <label className=\"label\" htmlFor={label}>\r\n                        <span className=\"inner\" />\r\n                        <span className=\"switch\" />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { faImage, faLock } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Worker } from '@react-pdf-viewer/core';\r\nimport { Viewer } from '@react-pdf-viewer/core';\r\nimport LoggedInUserContext from '../../context/logged-in-user'\r\nimport { BOOKSHELL } from '../../constants/routes'\r\nimport { postByUsername } from '../../services/postServices';\r\nimport '@react-pdf-viewer/core/lib/styles/index.css';\r\nimport Toggleswitch from '../toggleswitch';\r\n\r\nexport default function Newpost() {\r\n    const { user: loggedInUser } = useContext(LoggedInUserContext);\r\n    const [selectedFiles, setSelectedFiles] = useState()\r\n    const [fileurl, setfileurl] = useState('')\r\n    const [files, setFiles] = useState([])\r\n    const [paid, setPaid] = useState(false)\r\n    const [caption, setCaption] = useState(\"\")\r\n    const [title, setTitle] = useState(\"\")\r\n    const [price, setPrice] = useState()\r\n    let [result, setResult] = useState();\r\n    let [progress, setProgress] = useState();\r\n    let history = useHistory()\r\n\r\n    const handleFileUpload = (e) => {\r\n        if (!e.target.files.length) return;\r\n\r\n        setfileurl(URL.createObjectURL(e.target.files[0]))\r\n        let reader = new FileReader();\r\n        // Convert the file to base64 text\r\n        reader.readAsDataURL(e.target.files[0]);\r\n        // on reader load somthing...\r\n        reader.onload = () => {\r\n            // Make a fileInfo Object\r\n            const baseURL = reader.result;\r\n            setFiles(baseURL)\r\n        }\r\n    }\r\n\r\n    const handleCaption = (e) => {\r\n        setCaption(e.target.value)\r\n    }\r\n\r\n    const handleTitle = (e) => {\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    const handlePaid = () => {\r\n        setPaid(!paid)\r\n    }\r\n\r\n    const progressfn = {\r\n        onUploadProgress: (progressEvent) => {\r\n            let progressper = Math.round(progressEvent.loaded / progressEvent.total * 100) + \"%\";\r\n            console.log(progressper);\r\n            setProgress(progressper)\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            const { data } = await postByUsername(files, title, caption, loggedInUser.username, paid, price, progressfn)\r\n            // const res = await postByUsername(formData, loggedInUser.username)\r\n\r\n            history.push(BOOKSHELL)\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    }\r\n\r\n    const progressUpdate = {\r\n        width: progress,\r\n    }\r\n\r\n    console.log(progress);\r\n    return (\r\n        <>\r\n            <div className=\"newpost__head\">\r\n                <h3 className=\"heading-tertiary\">New Post</h3>\r\n                <div>\r\n                    <Toggleswitch label=\"Paid\" handlePaid={handlePaid} />\r\n                    <button className=\"btn btn--grey\" onClick={handleSubmit}>Post</button>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"newpost__main\">\r\n                <input className=\"newpost__input-text\" type=\"text\" placeholder=\"Title\" onChange={handleTitle} />\r\n                <textarea className=\"newpost__input-text\" placeholder=\"Description...\" onChange={handleCaption} />\r\n                <label className=\"newpost__media\">\r\n                    <FontAwesomeIcon icon={faImage} />\r\n                    <input type=\"file\" style={{ opacity: 0, position: \"absolute\", left: \"-99999px\" }} onChange={handleFileUpload} />\r\n                </label>\r\n\r\n                <input type=\"text\" placeholder=\"Price\" onChange={(e) => setPrice(e.target.value)} />\r\n            </div>\r\n            <div style={{ height: '750px' }}>\r\n                {fileurl ? (\r\n                    <div\r\n                        style={{\r\n                            border: '1px solid rgba(0, 0, 0, 0.3)',\r\n                            height: '100%',\r\n                        }}\r\n                    >\r\n                        <Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.6.347/build/pdf.worker.min.js\">\r\n                            <Viewer fileUrl={fileurl} />\r\n                        </Worker>\r\n                    </div>\r\n                ) : (\r\n                    <div\r\n                        style={{\r\n                            alignItems: 'center',\r\n                            border: '2px dashed rgba(0, 0, 0, .3)',\r\n                            display: 'flex',\r\n                            fontSize: '2rem',\r\n                            height: '100%',\r\n                            justifyContent: 'center',\r\n                            width: '100%',\r\n                        }}\r\n                    >\r\n                        Preview area\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {progress &&\r\n                ReactDOM.createPortal(\r\n                    <>\r\n                        <div className=\"modal-layout\" ></div>\r\n                        <div className=\"modal-box\">\r\n                            <div className=\"modal-box__heading heading-black\">{progress}</div>\r\n                            <div className=\"progress-bar\">\r\n                                <div className=\"progress-bar__container\">\r\n                                    <div style={progressUpdate} className=\"progress-bar-stick\">\r\n                                        <span className=\"progress-bar__text\">Uploaded Successfully!</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>,\r\n                    document.getElementById(\"modal\")\r\n                )}\r\n        </>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = apiUrl + \"/post\";\r\n\r\nexport const postByUsername = async (files, title, caption, username, paid, price, progress) => {\r\n    try {\r\n        const { data } = await axios.post(`${apiEndpoint}/add-material/${username}`,\r\n            { files, title, caption, paid, price }, progress);\r\n        return { data };\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const retrivePostByUsername = async (username) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const getUserMaterialByUsername = async (username, logginUserId, pageNumber, limit) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/user-material/${username}`,\r\n            {\r\n                params: { page: pageNumber, limit: limit, logginUserId: logginUserId }\r\n            });\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n};\r\nexport const getMaterialByTitle = async (title) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/title/${title}`\r\n        );\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nexport const buyMaterialById = async (materialId, userId, username, author) => {\r\n    try {\r\n        const response = await axios.post(`${apiEndpoint}/buy-material/${materialId}`,\r\n            {\r\n                username, author, userId\r\n            })\r\n        return response.data\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getUserPurcMaterialByUserId = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/get-purc-material/${userId}`)\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n};\r\n\r\nexport const getUserPhotosByUsername = async (username, logginUserId, pageNumber, limit) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/user-posts/${username}`,\r\n            {\r\n                params: { page: pageNumber, limit: limit, logginUserId: logginUserId }\r\n            });\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n};\r\n\r\nexport const addReview = async (message, userId, materialId) => {\r\n    try {\r\n        const response = await axios.post(`${apiEndpoint}/add-review/${materialId}`,\r\n            { message, userId }\r\n        );\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nexport const getReviewByMaterialId = async (materialId) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/get-review/${materialId}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nexport const checkPurchased = async (userId, materialId) => {\r\n    try {\r\n        const response = await axios.post(`${apiEndpoint}/check-purchased`, {\r\n            userId, materialId\r\n        });\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const getPost = async (userId, page, limit) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/all-posts/${userId}`, {\r\n            params: { page: page, limit: limit }\r\n        });\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const deletePostById = async (postId) => {\r\n    try {\r\n        const response = await axios.delete(`${apiEndpoint}/delete/${postId}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        return err.response.data.error;\r\n    }\r\n};"],"sourceRoot":""}