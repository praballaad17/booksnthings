{"version":3,"sources":["components/bookshell/reader.js","components/bookshell/pursMaterial.js"],"names":["Reader","material","reader","onClose","useState","fileurl","setFileurl","loading","setLoading","console","log","useEffect","a","getMaterialByTitle","title","materialFile","files","ReactDom","createPortal","className","onClick","style","height","border","display","justifyContent","alignItems","workerUrl","fileUrl","fontSize","width","document","getElementById","PursMaterial","useContext","MaterialContext","setReader","open","setOpen","length","map","item","to","handelRead"],"mappings":"iWAOe,SAASA,EAAT,GAAgD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAC/C,EAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAYA,OAXAC,QAAQC,IAAIL,GAEZM,oBAAS,sBAAC,4BAAAC,EAAA,6DACNJ,GAAW,GACXC,QAAQC,IAAI,WAFN,SAGqBG,YAAkB,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAUa,OAHlD,OAGAC,EAHA,OAINT,EAAU,OAACS,QAAD,IAACA,OAAD,EAACA,EAAcC,OACzBP,QAAQC,IAAI,eACZF,GAAW,GANL,2CAOP,IAEEN,EAEEe,IAASC,aAEZ,sBAAKC,UAAU,SAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,6BAAKlB,EAASa,QACd,qBAAKM,QAASjB,EAAd,kBAEHI,EACG,qBAAKY,UAAU,eAAf,SACI,cAAC,IAAD,MAGJ,qBAAKE,MAAO,CAAEC,OAAQ,SAAtB,SACKjB,EACG,qBACIgB,MAAO,CACHE,OAAQ,+BACRD,OAAQ,OACRE,QAAS,OACTC,eAAgB,SAChBC,WAAY,UANpB,SASI,cAAC,SAAD,CAAQC,UAAU,+DAAlB,SACI,cAAC,SAAD,CAAQC,QAASvB,QAIzB,qBACIgB,MAAO,CACHK,WAAY,SACZH,OAAQ,+BACRC,QAAS,OACTK,SAAU,OACVP,OAAQ,OACRG,eAAgB,SAChBK,MAAO,QARf,+BAkBhBC,SAASC,eAAe,WAhDR,O,oIChBT,SAASC,IACpB,IAAQA,EAAiBC,qBAAWC,KAA5BF,aACR,EAA4B7B,oBAAS,GAArC,mBAAOF,EAAP,KAAekC,EAAf,KACA,EAAwBhC,qBAAxB,mBAAOiC,EAAP,KAAaC,EAAb,KAMA,OAAKL,EAAaM,OAKd,8BACKN,GAAgB,sBAAKd,UAAU,aAAf,UACZc,EAAaO,KAAI,SAAAC,GACd,OACI,mCACI,sBAAKtB,UAAU,mBAAf,UACI,oBAAIA,UAAU,oBAAd,SACI,cAAC,IAAD,CAAMuB,GAAE,oBAAeD,EAAK3B,OAASK,UAAU,0BAA/C,SACKsB,EAAK3B,UAEd,wBAAQM,QAAS,kBApB1B,SAACqB,GAChBL,GAAU,GACVE,EAAQG,GAkBuCE,CAAWF,IAAOtB,UAAU,gBAAnD,0BAKhB,cAAC,IAAD,CAAQjB,OAAQA,EAAQD,SAAUoC,EAAMlC,QAAS,kBAAMiC,GAAU,WAnBzE,qBAAKjB,UAAU,eAAf","file":"static/js/8.45bf3103.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { Worker } from '@react-pdf-viewer/core';\r\nimport { Viewer } from '@react-pdf-viewer/core';\r\nimport { getMaterialByTitle } from '../../services/postServices';\r\nimport ReactLoader from '../loader';\r\n\r\nexport default function Reader({ material, reader, onClose }) {\r\n    const [fileurl, setFileurl] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    console.log(fileurl);\r\n\r\n    useEffect(async () => {\r\n        setLoading(true)\r\n        console.log(\"loading\");\r\n        const materialFile = await getMaterialByTitle(material?.title);\r\n        setFileurl(materialFile?.files)\r\n        console.log(\"not loading\");\r\n        setLoading(false)\r\n    }, [])\r\n\r\n    if (!reader) return null\r\n\r\n    return ReactDom.createPortal(\r\n\r\n        <div className=\"reader\">\r\n            <div className=\"reader__header\">\r\n                <h2>{material.title}</h2>\r\n                <div onClick={onClose}>x</div>\r\n            </div>\r\n            {loading ? (\r\n                <div className=\"u-all-center\">\r\n                    <ReactLoader />\r\n                </div>\r\n            ) : (\r\n                <div style={{ height: '750px' }}>\r\n                    {fileurl ? (\r\n                        <div\r\n                            style={{\r\n                                border: '1px solid rgba(0, 0, 0, 0.3)',\r\n                                height: '100%',\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center'\r\n                            }}\r\n                        >\r\n                            <Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.6.347/build/pdf.worker.min.js\">\r\n                                <Viewer fileUrl={fileurl} />\r\n                            </Worker>\r\n                        </div>\r\n                    ) : (\r\n                        <div\r\n                            style={{\r\n                                alignItems: 'center',\r\n                                border: '2px dashed rgba(0, 0, 0, .3)',\r\n                                display: 'flex',\r\n                                fontSize: '2rem',\r\n                                height: '100%',\r\n                                justifyContent: 'center',\r\n                                width: '100%',\r\n                            }}\r\n                        >\r\n                            Preview area\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n        </div>,\r\n        document.getElementById(\"reader\")\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport MaterialContext from '../../context/material'\r\nimport Reader from './reader';\r\n\r\nexport default function PursMaterial() {\r\n    const { PursMaterial } = useContext(MaterialContext)\r\n    const [reader, setReader] = useState(false)\r\n    const [open, setOpen] = useState()\r\n    const handelRead = (item) => {\r\n        setReader(true)\r\n        setOpen(item)\r\n    }\r\n\r\n    if (!PursMaterial.length) return (\r\n        <div className=\"u-all-center\">Try Some New Books...</div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {PursMaterial && <div className=\"mymaterial\">\r\n                {PursMaterial.map(item => {\r\n                    return (\r\n                        <>\r\n                            <div className=\"mymaterial__head\">\r\n                                <h2 className=\"heading-secondary\">\r\n                                    <Link to={`/material/${item.title}`} className=\"search-result__material\">\r\n                                        {item.title}</Link>\r\n                                </h2>\r\n                                <button onClick={() => handelRead(item)} className=\"btn btn--read\">Read</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                })}\r\n                <Reader reader={reader} material={open} onClose={() => setReader(false)} />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}