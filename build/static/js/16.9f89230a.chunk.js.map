{"version":3,"sources":["pages/sign-up.js"],"names":["SignUp","location","useLocation","useState","username","setUsername","fullName","setFullName","emailAddress","setEmailAddress","password","setPassword","loggedInUser","useContext","UserContext","user","error","setError","isInvalid","handleSignUp","event","a","preventDefault","registerUser","window","pathname","console","log","response","message","useEffect","document","title","to","ROUTES","className","onSubmit","method","type","placeholder","onChange","target","value","disabled"],"mappings":"qPAMe,SAASA,IACtB,IAAMC,EAAWC,cAEjB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACcC,EAAiBC,qBAAWC,KAAlCC,KAER,EAA0BZ,mBAAS,IAAnC,mBAAOa,EAAP,KAAcC,EAAd,KACMC,EAAyB,KAAbR,GAAoC,KAAjBF,EAE/BW,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACnBD,EAAME,iBADa,kBAGXC,YAAanB,EAAUE,EAAUE,EAAcE,GAHpC,OAIjBc,OAAOvB,SAAWA,EAAWA,EAASwB,SAAW,IAJhC,gDAMjBC,QAAQC,IAAI,KAAMC,UAClBrB,EAAY,IACZE,EAAgB,IAChBE,EAAY,IACZM,EAAS,KAAMY,SAVE,yDAAH,sDAsBlB,OAJAC,qBAAU,WACRC,SAASC,MAAQ,2BAChB,IAECpB,EAAqB,cAAC,IAAD,CAAUqB,GAAIC,MAGrC,qBAAKC,UAAU,QAAf,SAEE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,mBAAd,2BAICnB,GAAS,mBAAGmB,UAAU,oBAAb,SAAkCnB,IAE5C,uBAAMoB,SAAUjB,EAAckB,OAAO,OAArC,UACE,uBACE,aAAW,sBACXC,KAAK,OACLC,YAAY,WACZJ,UAAU,qBACVK,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBpC,EAAYoC,EAAOC,QAC7CA,MAAOtC,IAET,uBACE,aAAW,uBACXkC,KAAK,OACLC,YAAY,YACZJ,UAAU,qBACVK,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBlC,EAAYkC,EAAOC,QAC7CA,MAAOpC,IAET,uBACE,aAAW,2BACXgC,KAAK,OACLC,YAAY,gBACZJ,UAAU,qBACVK,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBhC,EAAgBgC,EAAOC,QACjDA,MAAOlC,IAET,uBACE,aAAW,sBACX8B,KAAK,WACLC,YAAY,WACZJ,UAAU,qBACVK,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB9B,EAAY8B,EAAOC,QAC7CA,MAAOhC,IAET,wBACEiC,SAAUzB,EACVoB,KAAK,SACLH,UAAS,qCACTjB,GAAa,cAJf,2BAUJ,qBAAKiB,UAAU,mBAAf,SACE,oBAAGA,UAAU,4BAAb,iCAEE,cAAC,IAAD,CAAMF,GAAIC,IAAcC,UAAU,cAAlC","file":"static/js/16.9f89230a.chunk.js","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { Link, useLocation, Redirect } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport { registerUser } from '../services/authenticationServices';\nimport UserContext from '../context/user';\n\nexport default function SignUp() {\n  const location = useLocation()\n\n  const [username, setUsername] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [emailAddress, setEmailAddress] = useState('');\n  const [password, setPassword] = useState('');\n  const { user: loggedInUser } = useContext(UserContext);\n\n  const [error, setError] = useState('');\n  const isInvalid = password === '' || emailAddress === '';\n\n  const handleSignUp = async (event) => {\n    event.preventDefault();\n    try {\n      await registerUser(username, fullName, emailAddress, password);\n      window.location = location ? location.pathname : \"/\"\n    } catch (error) {\n      console.log(error.response);\n      setFullName('');\n      setEmailAddress('');\n      setPassword('');\n      setError(error.message);\n    }\n    // } else {\n    //   setUsername('');\n    //   setError('That username is already taken, please try another.');\n    // }\n  };\n\n  useEffect(() => {\n    document.title = \"SignUp - Book'N'Things\";\n  }, []);\n\n  if (loggedInUser) return <Redirect to={ROUTES.DASHBOARD} />\n\n  return (\n    <div className=\"login\">\n\n      <div className=\"login__box\">\n        <div className=\"login__box--sub\">\n          <h1 className=\"login__box--head\">\n            Book'N'Things\n          </h1>\n\n          {error && <p className=\"login__box--error\">{error}</p>}\n\n          <form onSubmit={handleSignUp} method=\"POST\">\n            <input\n              aria-label=\"Enter your username\"\n              type=\"text\"\n              placeholder=\"Username\"\n              className=\"login__form--input\"\n              onChange={({ target }) => setUsername(target.value)}\n              value={username}\n            />\n            <input\n              aria-label=\"Enter your full name\"\n              type=\"text\"\n              placeholder=\"Full name\"\n              className=\"login__form--input\"\n              onChange={({ target }) => setFullName(target.value)}\n              value={fullName}\n            />\n            <input\n              aria-label=\"Enter your email address\"\n              type=\"text\"\n              placeholder=\"Email address\"\n              className=\"login__form--input\"\n              onChange={({ target }) => setEmailAddress(target.value)}\n              value={emailAddress}\n            />\n            <input\n              aria-label=\"Enter your password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              className=\"login__form--input\"\n              onChange={({ target }) => setPassword(target.value)}\n              value={password}\n            />\n            <button\n              disabled={isInvalid}\n              type=\"submit\"\n              className={`btn btn-login\n            ${isInvalid && 'opacity-50'}`}\n            >\n              Sign Up\n            </button>\n          </form>\n        </div>\n        <div className=\"login__box--foot\">\n          <p className=\"login__box--foot--content\">\n            Have an account?{` `}\n            <Link to={ROUTES.LOGIN} className=\"u-text-blue\">\n              Login\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}