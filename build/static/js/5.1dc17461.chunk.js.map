{"version":3,"sources":["hooks/use-photos.js","components/toggleswitch.js","components/newpost/newpost.js","services/postServices.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["usePhotos","user","pageNumber","useState","loading","setLoading","error","setError","posts","setPosts","hasMore","setMore","useEffect","getTimelinePhotos","a","following","length","getPost","_id","post","prevPost","result","console","log","userId","Toggleswitch","label","handlePaid","className","type","name","id","onChange","htmlFor","Newpost","loggedInUser","useContext","LoggedInUserContext","fileurl","setfileurl","files","setFiles","paid","setPaid","caption","setCaption","title","setTitle","price","setPrice","history","useHistory","progress","onUploadProgress","progressEvent","progressper","Math","round","loaded","total","handleSubmit","postByUsername","username","data","push","MYMATERIAL","response","onClick","placeholder","e","target","value","icon","faImage","style","opacity","position","left","URL","createObjectURL","reader","FileReader","readAsDataURL","onload","baseURL","height","border","workerUrl","fileUrl","alignItems","display","fontSize","justifyContent","width","apiEndpoint","apiUrl","axios","Error","getUserMaterialByUsername","logginUserId","limit","get","params","page","getMaterialByTitle","buyMaterialById","materialId","author","getUserPurcMaterialByUserId","getUserPhotosByUsername","addReview","message","getReviewByMaterialId","deletePostById","postId","delete","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/5.1dc17461.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { getPost, retrivePostByUserId } from '../services/postServices';\n\nexport default function usePhotos(user, pageNumber) {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  const [posts, setPosts] = useState([]);\n  const [hasMore, setMore] = useState(false)\n\n  useEffect(async () => {\n    setLoading(true)\n    setError(false)\n    async function getTimelinePhotos() {\n\n      if (user?.following?.length > 0) {\n        try {\n          const post = await getPost(user._id, pageNumber, 5);\n          setPosts(prevPost => { return [...prevPost, ...post.result] });\n          setMore(post.result.length > 0)\n          setLoading(false)\n        } catch (error) {\n          setError(true)\n          console.log(error);\n        }\n      }\n    }\n\n    getTimelinePhotos();\n  }, [user?.userId, user?.following, pageNumber]);\n\n  return { posts, loading, error, hasMore, setPosts };\n}\n","import React, { useState } from 'react'\r\n\r\nexport default function Toggleswitch({ label, handlePaid, }) {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                {label}{\" \"}\r\n                <div className=\"toggle-switch\">\r\n                    <input type=\"checkbox\" className=\"checkbox\"\r\n                        name={label} id={label} onChange={handlePaid} />\r\n                    <label className=\"label\" htmlFor={label}>\r\n                        <span className=\"inner\" />\r\n                        <span className=\"switch\" />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { faImage, faLock } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Worker } from '@react-pdf-viewer/core';\r\nimport { Viewer } from '@react-pdf-viewer/core';\r\nimport UploadPreview from './uploadPreview'\r\nimport LoggedInUserContext from '../../context/logged-in-user'\r\nimport usePhotos from '../../hooks/use-photos'\r\nimport { DASHBOARD, MYMATERIAL } from '../../constants/routes'\r\nimport { postByUsername } from '../../services/postServices';\r\nimport '@react-pdf-viewer/core/lib/styles/index.css';\r\nimport Toggleswitch from '../toggleswitch';\r\n\r\nexport default function Newpost() {\r\n    const { user: loggedInUser } = useContext(LoggedInUserContext);\r\n    const { setPosts } = usePhotos()\r\n    const [selectedFiles, setSelectedFiles] = useState()\r\n    const [fileurl, setfileurl] = useState('')\r\n    const [files, setFiles] = useState([])\r\n    const [paid, setPaid] = useState(false)\r\n    const [caption, setCaption] = useState(\"\")\r\n    const [title, setTitle] = useState(\"\")\r\n    const [price, setPrice] = useState()\r\n    let [result, setResult] = useState();\r\n    let history = useHistory()\r\n\r\n    const handleFileUpload = (e) => {\r\n        if (!e.target.files.length) return;\r\n\r\n        setfileurl(URL.createObjectURL(e.target.files[0]))\r\n        let reader = new FileReader();\r\n        // Convert the file to base64 text\r\n        reader.readAsDataURL(e.target.files[0]);\r\n        // on reader load somthing...\r\n        reader.onload = () => {\r\n            // Make a fileInfo Object\r\n            const baseURL = reader.result;\r\n            setFiles(baseURL)\r\n        }\r\n    }\r\n\r\n    const handleCaption = (e) => {\r\n        setCaption(e.target.value)\r\n    }\r\n\r\n    const handleTitle = (e) => {\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    const handlePaid = () => {\r\n        setPaid(!paid)\r\n    }\r\n\r\n    const progress = {\r\n        onUploadProgress: (progressEvent) => {\r\n            let progressper = Math.round(progressEvent.loaded / progressEvent.total * 100) + \"%\";\r\n            console.log(progressper);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            const { data } = await postByUsername(files, title, caption, loggedInUser.username, paid, price, progress)\r\n            // const res = await postByUsername(formData, loggedInUser.username)\r\n            setPosts(data)\r\n            history.push(MYMATERIAL)\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    }\r\n\r\n    console.log(paid);\r\n    return (\r\n        <>\r\n            <div className=\"newpost__head\">\r\n                <h3 className=\"heading-tertiary\">New Post</h3>\r\n                <div>\r\n                    <Toggleswitch label=\"Paid\" handlePaid={handlePaid} />\r\n                    <button className=\"btn btn--grey\" onClick={handleSubmit}>Post</button>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"newpost__main\">\r\n                <input className=\"newpost__input-text\" type=\"text\" placeholder=\"Title\" onChange={handleTitle} />\r\n                <textarea className=\"newpost__input-text\" placeholder=\"Description...\" onChange={handleCaption} />\r\n                <label className=\"newpost__media\">\r\n                    <FontAwesomeIcon icon={faImage} />\r\n                    <input type=\"file\" style={{ opacity: 0, position: \"absolute\", left: \"-99999px\" }} onChange={handleFileUpload} />\r\n                </label>\r\n\r\n                <input type=\"text\" placeholder=\"Price\" onChange={(e) => setPrice(e.target.value)} />\r\n            </div>\r\n            <div style={{ height: '750px' }}>\r\n                {fileurl ? (\r\n                    <div\r\n                        style={{\r\n                            border: '1px solid rgba(0, 0, 0, 0.3)',\r\n                            height: '100%',\r\n                        }}\r\n                    >\r\n                        <Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.6.347/build/pdf.worker.min.js\">\r\n                            <Viewer fileUrl={fileurl} />\r\n                        </Worker>\r\n                    </div>\r\n                ) : (\r\n                    <div\r\n                        style={{\r\n                            alignItems: 'center',\r\n                            border: '2px dashed rgba(0, 0, 0, .3)',\r\n                            display: 'flex',\r\n                            fontSize: '2rem',\r\n                            height: '100%',\r\n                            justifyContent: 'center',\r\n                            width: '100%',\r\n                        }}\r\n                    >\r\n                        Preview area\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = apiUrl + \"/post\";\r\n\r\nexport const postByUsername = async (files, title, caption, username, paid, price, progress) => {\r\n    try {\r\n        const { data } = await axios.post(`${apiEndpoint}/${username}`,\r\n            { files, title, caption, paid, price }, progress);\r\n        return { data };\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const retrivePostByUsername = async (username) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const getUserMaterialByUsername = async (username, logginUserId, pageNumber, limit) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/user-material/${username}`,\r\n            {\r\n                params: { page: pageNumber, limit: limit, logginUserId: logginUserId }\r\n            });\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n};\r\nexport const getMaterialByTitle = async (title) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/title/${title}`\r\n        );\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nexport const buyMaterialById = async (materialId, userId, username, author) => {\r\n    try {\r\n        const response = await axios.post(`${apiEndpoint}/buy-material/${materialId}`,\r\n            {\r\n                username, author, userId\r\n            })\r\n        return response.data\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getUserPurcMaterialByUserId = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/get-purc-material/${userId}`)\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n};\r\n\r\nexport const getUserPhotosByUsername = async (username, logginUserId, pageNumber, limit) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/user-posts/${username}`,\r\n            {\r\n                params: { page: pageNumber, limit: limit, logginUserId: logginUserId }\r\n            });\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n};\r\n\r\nexport const addReview = async (message, userId, materialId) => {\r\n    try {\r\n        const response = await axios.post(`${apiEndpoint}/add-review/${materialId}`,\r\n            { message, userId }\r\n        );\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nexport const getReviewByMaterialId = async (materialId) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/get-review/${materialId}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nexport const retrivePostByUserId = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/userId/${userId}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const getPost = async (userId, page, limit) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/all-posts/${userId}`, {\r\n            params: { page: page, limit: limit }\r\n        });\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const deletePostById = async (postId) => {\r\n    try {\r\n        const response = await axios.delete(`${apiEndpoint}/delete/${postId}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        return err.response.data.error;\r\n    }\r\n};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}