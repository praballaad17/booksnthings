{"version":3,"sources":["hooks/use-photos.js","context/timeline.js","components/post/postModal.js","components/post/header.js","components/post/image.js","components/post/footer.js","components/post/index.js","components/profile/pimodal.js","components/profile/followerModal.js","components/profile/header.js","components/profile/index.js","pages/profile.js","services/postServices.js"],"names":["usePhotos","user","pageNumber","useState","loading","setLoading","error","setError","posts","setPosts","hasMore","setMore","useEffect","getTimelinePhotos","a","following","length","getPost","_id","post","sortedPost","results","sort","b","dateA","Date","date","prevPost","console","log","userId","TimeLineContext","createContext","PostModal","open","content","onClose","photosCollection","setProfile","useContext","LoggedInUserContext","pathname","useLocation","unfollow","ReactDom","createPortal","className","onClick","target","to","author","username","filter","item","deletePostById","then","catch","e","alert","push","localStorage","setItem","JSON","stringify","postId","document","getElementById","Header","profileImg","isModal","setModal","src","DEFAULT_IMAGE_PATH","alt","icon","faEllipsisV","Image","files","caption","counter","setCounter","faArrowRight","faArrowLeft","Footer","newCap","setNewCap","replace","Post","postref","useRef","setProfileImg","getuserDisplayImgs","displayImg","ref","PIModal","removeImage","removeProfileImg","window","location","type","style","opacity","position","left","onChange","reader","FileReader","readAsDataURL","onload","baseURL","result","updateProfileImg","updatedImg","FollowerModal","followers","map","follower","photosCount","followerCount","displayImgs","profile","profileUserId","fullName","profileUsername","loggedInUser","UserContext","useUser","isFollowingProfile","setIsFollowingProfile","ispiModal","setIspiModal","isfollowerModal","setIsfollowerModal","setIsfollowingModal","activeBtnFollow","handleToggleFollow","toggleFollow","isFollowing","isLoggedInUserFollowingProfile","onError","circle","height","width","count","onKeyDown","event","key","Profile","useReducer","state","newState","dispatch","getUserPhotosByUsername","photos","getProfileInfoAndPhotos","Provider","value","href","NEWPOST","useParams","setUser","history","useHistory","getUserByUsername","getusersFollowers","getusersFollowing","ROUTES","checkUserExists","apiEndpoint","apiUrl","postByUsername","progress","axios","data","Error","response","get","page","limit","params","delete"],"mappings":"qMAGe,SAASA,EAAUC,EAAMC,GACtC,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA2BN,oBAAS,GAApC,mBAAOO,EAAP,KAAgBC,EAAhB,KA8BA,OA5BAC,oBAAS,sBAAC,iBAGOC,EAHP,WAAAC,EAAA,0FAAAA,EAAA,MAGR,gCAAAA,EAAA,4DAGU,OAAJb,QAAI,IAAJA,GAAA,UAAAA,EAAMc,iBAAN,eAAiBC,QAAS,GAHhC,0CAKyBC,YAAQhB,EAAKiB,IAAKhB,EAAY,GALvD,OAKYiB,EALZ,OAQYC,EAAaD,EAAKE,QAAQC,MAAK,SAACR,EAAGS,GACvC,IAAMC,EAAQ,IAAIC,KAAKX,EAAEY,MACzB,OADwC,IAAID,KAAKF,EAAEG,MACpCF,KAEjBf,GAAS,SAAAkB,GAAc,MAAM,GAAN,mBAAWA,GAAX,YAAwBP,OAC/CT,EAAQQ,EAAKE,QAAQL,OAAS,GAC9BX,GAAW,GAdjB,kDAgBME,GAAS,GACTqB,QAAQC,IAAR,MAjBN,2DAHQ,uBAGOhB,EAHP,2CACRR,GAAW,GACXE,GAAS,GAuBTM,IAzBQ,2CA0BP,QAACZ,QAAD,IAACA,OAAD,EAACA,EAAM6B,OAAP,OAAe7B,QAAf,IAAeA,OAAf,EAAeA,EAAMc,UAAWb,IAE5B,CAAEM,QAAOJ,UAASE,QAAOI,UAASD,c,iCCrC3C,WAEMsB,EAAkBC,wBAAc,MACvBD,O,6NCOA,SAASE,EAAT,GAA8E,IAAzDC,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,QAAqBC,GAAoB,EAAhCC,WAAgC,EAApBD,kBACpE,EAAoClC,qBAApC,mBACQF,GADR,UACiBsC,qBAAWC,KAApBvC,MACR,EAA4BsC,qBAAWR,KAA/BvB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACPgC,EAAaC,cAAbD,SAER,IAAKP,EAAM,OAAO,KAElB,IAAMS,EAAQ,uCAAG,sBAAA7B,EAAA,0FAAH,qDAsCd,OAAO8B,IAASC,aACZ,qCACI,qBAAKC,UAAU,eAAeC,QAASX,IACvC,qBAAKU,UAAU,YAAf,SACI,qBAAIA,UAAU,kBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiC,cAAC,IAAD,CAAME,OAAO,UAAUC,GAAE,uBAAWd,QAAX,IAAWA,OAAX,EAAWA,EAASe,QAA7C,qBAChCf,EAAQe,QAAUjD,EAAKkD,UAAY,oBAAIL,UAAU,kCAAkCC,QAASJ,EAAzD,sBACnCR,EAAQe,QAAUjD,EAAKkD,UAAY,oBAAKL,UAAU,kCAAkCC,QA9BlF,WAEXtC,EADY,KAAZgC,EACSjC,EAAM4C,QAAO,SAAAC,GAAI,OAAIA,EAAKnC,KAAOiB,EAAQjB,OAIzC,CAAEmB,iBAAkBA,EAAiBe,QAAO,SAAAC,GAAI,OAAIA,EAAKnC,KAAOiB,EAAQjB,SACrFoC,YAAenB,EAAQjB,KAAKqC,MAAK,eAG9BC,OAAM,SAAAC,GACLC,MAAM,gEACN9B,QAAQC,IAAI4B,EAAGtB,GAEX1B,EADY,KAAZgC,EACS,SAAAd,GAAQ,4BAAQA,GAAR,CAAkBQ,KAI1B,CAAEE,iBAAkBA,EAAiBsB,KAAKxB,SAYX,yBACnCA,EAAQe,QAAUjD,EAAKkD,UAAY,oBAAIL,UAAU,kCAAkCC,QArC/E,WACjBa,aAAaC,QAAQ,eAAgBC,KAAKC,UAAU,CAAEC,OAAQ7B,EAAQjB,IAAKgC,OAAQf,EAAQe,UAC3FzC,EAASD,EAAM4C,QAAO,SAAAC,GAAI,OAAIA,EAAKnC,KAAOiB,EAAQjB,QAClDkB,KAkCgD,oCACpC,oBAAIU,UAAU,kBAAkBC,QAASX,EAAzC,4BAIZ6B,SAASC,eAAe,UC3DjB,SAASC,EAAT,GAAkF,IAAhEhB,EAA+D,EAA/DA,SAAUiB,EAAqD,EAArDA,WAAYjC,EAAyC,EAAzCA,QAASG,EAAgC,EAAhCA,WAAYD,EAAoB,EAApBA,iBAC1E,EAA4BlC,oBAAS,GAArC,mBAAOkE,EAAP,KAAgBC,EAAhB,KAEA,OACE,sBAAKxB,UAAU,eAAf,UAEE,eAAC,IAAD,CAAMG,GAAE,gBAAWE,GAAYL,UAAU,oBAAzC,UACE,qBACEA,UAAU,oBACVyB,IAAKH,GAA0BI,IAC/BC,IAAG,UAAKtB,EAAL,sBAEL,mBAAGL,UAAU,YAAb,SAA0BK,OAE5B,qBAAKJ,QAAS,kBAAMuB,GAAS,IAA7B,SAAoC,cAAC,IAAD,CAAiBI,KAAMC,QAC3D,cAAC1C,EAAD,CAAWE,QAASA,EAASD,KAAMmC,EAASjC,QAAS,kBAAMkC,GAAS,IAAQhC,WAAYA,EAAYD,iBAAkBA,OCpB7G,SAASuC,EAAT,GAAoC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QACrC,EAA8B3E,mBAAS,GAAvC,mBAAO4E,EAAP,KAAgBC,EAAhB,KAUA,OACE,qBAAKlC,UAAU,eAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKyB,IAAKM,EAAME,GAAUN,IAAKK,IAC/B,mCACGC,EAAWF,EAAM7D,OAAS,GAEvB,wBAAQ8B,UAAU,0CAA0CC,QAhBvD,WACf,GAAIgC,GAAWF,EAAM7D,OAAS,EAAG,OAAO,KACxCgE,EAAWD,EAAU,IAcX,SACE,cAAC,IAAD,CAAiBL,KAAMO,UAIlB,IAAZF,GAAiB,wBAAQjC,UAAU,0CAA0CC,QAjBnE,WACf,GAAe,GAAXgC,EAAc,OAAO,KACzBC,EAAWD,EAAU,IAeC,SAChB,cAAC,IAAD,CAAiBL,KAAMQ,a,MC1BlB,SAASC,EAAT,GAAwC,IAAtBL,EAAqB,EAArBA,QAAS3B,EAAY,EAAZA,SACxC,EAA4BhD,mBAAS,IAArC,mBAAOiF,EAAP,KAAeC,EAAf,KAIA,OAHAzE,qBAAU,WACRyE,EAAUP,EAAQQ,QAAQ,KAAM,SAC/B,CAACR,IAEF,sBAAKhC,UAAU,eAAf,UACE,sBAAMA,UAAU,qBAAhB,SAAsCK,IACtC,sBAAML,UAAU,wBAAhB,SAAyCsC,O,mBCFhC,SAASG,EAAT,GAAmE,IAAnDpD,EAAkD,EAAlDA,QAASqD,EAAyC,EAAzCA,QAASlD,EAAgC,EAAhCA,WAAYD,EAAoB,EAApBA,iBAE3D,GADqBoD,iBAAO,MACQtF,sBAApC,mBAAOiE,EAAP,KAAmBsB,EAAnB,KAGQb,EAA2B1C,EAA3B0C,MAAOC,EAAoB3C,EAApB2C,QAAS5B,EAAWf,EAAXe,OAWxB,OATAtC,oBAAS,sBAAC,8BAAAE,EAAA,sEACqB6E,YAAmBzC,GADxC,gBACA0C,EADA,EACAA,WACRF,EAAcE,EAAWxB,YAFjB,2CAGP,IAOD,sBAAKyB,IAAKL,EAAS1C,UAAU,OAA7B,UACE,cAACqB,EAAD,CAAQhC,QAASA,EAASgB,SAAUhB,EAAQe,OAAQkB,WAAYA,EAAY9B,WAAYA,EAAYD,iBAAkBA,IACtH,cAACuC,EAAD,CAAOC,MAAOA,EAAOC,QAAS3C,EAAQe,SAOtC,cAACiC,EAAD,CAAQL,QAASA,EAAS3B,SAAUD,S,wOC9B3B,SAAS4C,EAAT,GAAuD,IAApC5D,EAAmC,EAAnCA,KAAMjC,EAA6B,EAA7BA,KAAMmC,EAAuB,EAAvBA,QAC1C,GADiE,EAAdE,WACfnC,sBAApC,6BAEA,IAAK+B,EAAM,OAAO,KAElB,IAAM6D,EAAW,uCAAG,sBAAAjF,EAAA,+EAENkF,YAAiB/F,EAAKkD,UAFhB,OAGZ8C,OAAOC,SAAP,gBAA2BjG,EAAKkD,UAHpB,+CAKZvB,QAAQC,IAAR,MALY,wDAAH,qDA+BjB,OAAOe,IAASC,aACZ,qCACI,qBAAKC,UAAU,eAAeC,QAASX,IACvC,sBAAKU,UAAU,YAAf,UACI,qBAAKA,UAAU,mCAAf,kCACA,qBAAIA,UAAU,kBAAd,UACI,uBAAOA,UAAU,iBAAjB,SACI,qBAAIA,UAAU,kBAAd,yBAEI,uBAAOqD,KAAK,OAAOC,MAAO,CAAEC,QAAS,EAAGC,SAAU,WAAYC,KAAM,YAAcC,SA/BrF,SAAC/C,GAClB,GAAKA,EAAET,OAAO6B,MAAM7D,OAApB,CAEA,IAAIyF,EAAS,IAAIC,WAEjBD,EAAOE,cAAclD,EAAET,OAAO6B,MAAM,IACpCjD,QAAQC,IAAI4B,EAAET,OAAO6B,MAAM,IAE3B4B,EAAOG,OAAP,sBAAgB,8BAAA9F,EAAA,6DAEN+F,EAAUJ,EAAOK,OAFX,kBAIiBC,YAAiB9G,EAAKkD,SAAU0D,GAJjD,OAIFG,EAJE,OAKRpF,QAAQC,IAAImF,GACZf,OAAOC,SAAP,gBAA2BjG,EAAKkD,UANxB,gDAQRvB,QAAQC,IAAR,MARQ,kEA0BJ,oBAAIiB,UAAU,kBAAkBC,QAASgD,EAAzC,0BACA,oBAAIjD,UAAU,kBAAkBC,QAASX,EAAzC,6BAIZ6B,SAASC,eAAe,UCpDjB,SAAS+C,EAAT,GAAiD,IAAxB/E,EAAuB,EAAvBA,KAAMjC,EAAiB,EAAjBA,KAAMmC,EAAW,EAAXA,QAChD,EAAoCjC,qBAApC,6BAEA,IAAK+B,EAAM,OAAO,KAElBN,QAAQC,IAAI5B,GAgCZ,OAAO2C,IAASC,aACZ,qCACI,qBAAKC,UAAU,eAAeC,QAASX,IACvC,sBAAKU,UAAU,YAAf,UACI,qBAAKA,UAAU,mCAAf,uBACA,qBAAIA,UAAU,kBAAd,UACK7C,EAAKiH,UAAUC,KAAI,SAACC,OASrB,oBAAItE,UAAU,kBAAkBC,QAASX,EAAzC,6BAIZ6B,SAASC,eAAe,UCnDjB,SAASC,EAAT,GAYX,IAXFkD,EAWC,EAXDA,YACAC,EAUC,EAVDA,cACAhF,EASC,EATDA,WACAiF,EAQC,EARDA,YAQC,IAPDC,QACOC,EAMN,EANCvG,IACAwG,EAKD,EALCA,SACAR,EAID,EAJCA,UACAnG,EAGD,EAHCA,UACU4G,EAEX,EAFCxE,SAGYyE,EAAiBrF,qBAAWsF,KAAlC5H,KACAA,EAAS6H,YAAO,OAACF,QAAD,IAACA,OAAD,EAACA,EAAczE,UAA/BlD,KACR,EAAoDE,mBAAS,MAA7D,mBAAO4H,EAAP,KAA2BC,EAA3B,KACA,EAAkC7H,oBAAS,GAA3C,mBAAO8H,EAAP,KAAkBC,EAAlB,KACA,EAA8C/H,oBAAS,GAAvD,mBAAOgI,EAAP,KAAwBC,EAAxB,KACA,EAAgDjI,oBAAS,GAAzD,mBAAyBkI,GAAzB,WAEMC,GAAsB,OAAJrI,QAAI,IAAJA,OAAA,EAAAA,EAAMkD,YAAgB,OAAJlD,QAAI,IAAJA,OAAA,EAAAA,EAAMkD,YAAawE,EAEvDY,EAAkB,uCAAG,sBAAAzH,EAAA,6DACzBkH,GAAsB,SAACD,GAAD,OAAyBA,KAC/CzF,EAAW,CACTgF,cAAeS,EAAqBT,EAAgB,EAAIA,EAAgB,IAHjD,SAKnBkB,YAAaT,EAAoBN,EAAexH,EAAKiB,KALlC,2CAAH,qDAqBxB,OAbAN,qBAAU,YAOA,OAAJX,QAAI,IAAJA,OAAA,EAAAA,EAAMkD,WAAYsE,GANiB,WAErC,IAAMgB,EAAcvB,EAAU9D,QAAO,SAAAC,GAAI,OAAIA,EAAKnC,KAAOjB,EAAKiB,OAC9D8G,IAAwBS,EAAYzH,QAIpC0H,KAED,QAACzI,QAAD,IAACA,OAAD,EAACA,EAAMkD,SAAUsE,IAIlB,mCACE,sBAAK3E,UAAU,iEAAf,UACE,qBAAKA,UAAU,6CAAf,SACG6E,EACC,qBACE5E,QAAS,kBAAMmF,GAAa,IAC5BpF,UAAU,8BACV2B,IAAG,UAAKiD,EAAL,oBACHnD,IAAKgD,EAAcA,EAAYnD,WAAaI,IAC5CmE,QAAS,SAAClF,GACRA,EAAET,OAAOuB,IAAMC,OAInB,cAAC,IAAD,CAAUoE,QAAM,EAACC,OAAQ,IAAKC,MAAO,IAAKC,MAAO,MAIrD,cAACjD,EAAD,CAASxD,WAAYA,EAAYJ,KAAM+F,EAAWhI,KAAMA,EAAMmC,QAAS,kBAAM8F,GAAa,MAE1F,sBAAKpF,UAAU,uDAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,mBAAGA,UAAU,gBAAb,SAA8B6E,IAC7BW,GAA0C,OAAvBP,EAClB,cAAC,IAAD,CAAUgB,MAAO,EAAGD,MAAO,GAAID,OAAQ,KAEvCP,GACE,wBACExF,UAAU,+DACVqD,KAAK,SACLpD,QAASwF,EACTS,UAAW,SAACC,GACQ,UAAdA,EAAMC,KACRX,KANN,SAUGR,EAAqB,WAAa,cAK3C,qBAAKjF,UAAU,sBAAf,SACIoE,GAAcnG,EAGd,qCACE,oBAAG+B,UAAU,QAAb,UACE,sBAAMA,UAAU,YAAhB,SAA6BuE,IAD/B,aAGA,oBAAGvE,UAAU,QAAQC,QAAS,kBAAMqF,GAAmB,IAAvD,UACE,sBAAMtF,UAAU,YAAhB,SAA6BwE,IAD/B,IAGqB,IAAlBA,EAAA,0BAEH,cAACL,EAAD,CAAe/E,KAAMiG,EAAiBlI,KAAMA,EAAMmC,QAAS,kBAAMgG,GAAmB,MACpF,oBAAGtF,UAAU,QAAQC,QAAS,kBAAMsF,GAAoB,IAAxD,UACE,sBAAMvF,UAAU,YAAhB,gBAA6B/B,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAWC,SAD1C,mBAZF,cAAC,IAAD,CAAU+H,MAAO,EAAGD,MAAO,IAAKD,OAAQ,OAkB5C,qBAAK/F,UAAU,iBAAf,SACE,mBAAGA,UAAU,cAAb,SAA6B4E,GAAW,cAAC,IAAD,CAAUqB,MAAO,EAAGF,OAAQ,iB,8BC5GjE,SAASM,EAAT,GAA4B,IAATlJ,EAAQ,EAARA,KAQhC,EAA8EmJ,sBAP9D,SAACC,EAAOC,GAAR,mBAAC,eAA0BD,GAAUC,KAChC,CACnB9B,QAAS,GACTnF,iBAAkB,KAClBiF,cAAe,EACfC,YAAa,KAEf,0BAASC,EAAT,EAASA,QAASnF,EAAlB,EAAkBA,iBAAkBiF,EAApC,EAAoCA,cAAeC,EAAnD,EAAmDA,YAAegC,EAAlE,KAkBA,OAbA3I,qBAAU,WAAM,4CACd,kCAAAE,EAAA,sEACuB0I,YAAwBvJ,EAAKkD,UADpD,cACQsG,EADR,OAEQrI,EAAaqI,EAAOnI,MAAK,SAACR,EAAGS,GACjC,IAAMC,EAAQ,IAAIC,KAAKX,EAAEY,MACzB,OADwC,IAAID,KAAKF,EAAEG,MACpCF,KAJnB,SAM+BmE,YAAmB1F,EAAKkD,UANvD,gBAMUyC,EANV,EAMUA,WACR2D,EAAS,CAAE/B,QAASvH,EAAMoC,iBAAkBjB,EAAYkG,cAAerH,EAAKiH,UAAUlG,OAAQuG,YAAa3B,IAP7G,4CADc,uBAAC,WAAD,wBAUd8D,KACC,CAACzJ,EAAKkD,WAGP,mCACE,eAAC,IAAgBwG,SAAjB,CAA0BC,MAAO,CAAE3J,OAAMO,MAAO6B,EAAkB5B,SAAU8I,GAA5E,UACE,cAAC,EAAD,CACElC,YAAahF,EAAmBA,EAAiBrB,OAAS,EAC1DwG,QAASA,EACTF,cAAeA,EACfC,YAAaA,EACbjF,WAAYiH,IAEZlH,EAGA,qCACGA,EAAiBrB,OACfqB,EAAiB8E,KAAI,SAAChF,GAAD,OAAa,cAAC,IAAD,CAAwBA,QAASA,EAASiC,WAAYmD,EAAYnD,WAAY9B,WAAYiH,EAAUlH,iBAAkBA,GAA3GF,EAAQjB,QAEpD,sBAAK4B,UAAU,SAAf,UACE,qBAAKA,UAAU,yBAAf,qBACA,sBAAKA,UAAU,YAAf,UAA2B,mBAAG+G,KAAMC,IAAT,wBAA3B,iBANR,OAFA,cAAC,IAAD,CAAUf,MAAO,EAAGD,MAAO,IAAKD,OAAQ,IAAK/F,UAAU,cCxClD,SAASqG,IACtB,IAAQhG,EAAa4G,cAAb5G,SACR,EAAwBhD,mBAAS,MAAjC,mBAAOF,EAAP,KAAa+J,EAAb,KACMC,EAAUC,cAkBhB,OAhBAtJ,qBAAU,WAAM,4CAEd,gCAAAE,EAAA,sEACqBqJ,YAAkBhH,GADvC,cACQlD,EADR,gBAE0BmK,YAAkBjH,GAF5C,cAEQ+D,EAFR,gBAG0BmD,YAAkBlH,GAH5C,OAGQpC,EAHR,QAIE,OAAId,QAAJ,IAAIA,OAAJ,EAAIA,EAAMiB,KACR8I,EAAQ,2BAAK/J,GAAN,IAAYiH,UAAWA,EAAWnG,UAAWA,KAGpDkJ,EAAQtG,KAAK2G,KARjB,6CAFc,uBAAC,WAAD,wBAadC,KACC,CAACpH,EAAU8G,KAEH,OAAJhK,QAAI,IAAJA,OAAA,EAAAA,EAAMkD,UACX,qBAAKL,UAAU,qBAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,cAAC,EAAD,CAAa7C,KAAMA,QAGrB,O,6NC/BAuK,EAAcC,IAAS,QAEhBC,EAAc,uCAAG,WAAO7F,EAAOC,EAAS3B,EAAUwH,GAAjC,iBAAA7J,EAAA,+EAEC8J,IAAMzJ,KAAN,UAAcqJ,EAAd,YAA6BrH,GAChD,CAAE0B,QAAOC,WAAW6F,GAHF,uBAEdE,EAFc,EAEdA,KAFc,kBAIf,CAAEA,SAJa,sCAMhB,IAAIC,MAAM,KAAIC,SAASF,KAAKvK,OANZ,yDAAH,4DAoBdkJ,EAAuB,uCAAG,WAAOrG,GAAP,eAAArC,EAAA,+EAER8J,IAAMI,IAAN,UAAaR,EAAb,uBAAuCrH,IAF/B,cAEzB4H,EAFyB,yBAGxBA,EAASF,MAHe,sCAKzB,IAAIC,MAAM,KAAIC,SAASF,KAAKvK,OALH,yDAAH,sDAkBvBW,EAAO,uCAAG,WAAOa,EAAQmJ,EAAMC,GAArB,eAAApK,EAAA,+EAEQ8J,IAAMI,IAAN,UAAaR,EAAb,sBAAsC1I,GAAU,CACnEqJ,OAAQ,CAAEF,KAAMA,EAAMC,MAAOA,KAHlB,cAETH,EAFS,yBAKRA,EAASF,MALD,sCAOT,IAAIC,MAAM,KAAIC,SAASF,KAAKvK,OAPnB,yDAAH,0DAWPgD,EAAc,uCAAG,WAAOU,GAAP,eAAAlD,EAAA,+EAEC8J,IAAMQ,OAAN,UAAgBZ,EAAhB,mBAAsCxG,IAFvC,cAEhB+G,EAFgB,yBAGfA,EAASF,MAHM,yDAKf,KAAIE,SAASF,KAAKvK,OALH,yDAAH","file":"static/js/2.4cac34f5.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { getPost, retrivePostByUserId } from '../services/postServices';\n\nexport default function usePhotos(user, pageNumber) {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  const [posts, setPosts] = useState([]);\n  const [hasMore, setMore] = useState(false)\n\n  useEffect(async () => {\n    setLoading(true)\n    setError(false)\n    async function getTimelinePhotos() {\n\n      // does the user actually follow people?\n      if (user?.following?.length > 0) {\n        try {\n          const post = await getPost(user._id, pageNumber, 5);\n\n          // re-arrange array to be newest photos first by dateCreated\n          const sortedPost = post.results.sort((a, b) => {\n            const dateA = new Date(a.date), dateB = new Date(b.date)\n            return dateB - dateA\n          })\n          setPosts(prevPost => { return [...prevPost, ...sortedPost] });\n          setMore(post.results.length > 0)\n          setLoading(false)\n        } catch (error) {\n          setError(true)\n          console.log(error);\n        }\n      }\n    }\n\n    getTimelinePhotos();\n  }, [user?.userId, user?.following, pageNumber]);\n\n  return { posts, loading, error, hasMore, setPosts };\n}\n","import { createContext } from 'react';\r\n\r\nconst TimeLineContext = createContext(null);\r\nexport default TimeLineContext;\r\n","import React, { useContext } from 'react'\r\nimport { useState } from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport LoggedInUserContext from '../../context/logged-in-user'\r\nimport { deletePostById } from '../../services/postServices'\r\nimport usePhotos from '../../hooks/use-photos'\r\nimport { DASHBOARD } from '../../constants/routes'\r\nimport TimeLineContext from '../../context/timeline'\r\n\r\nexport default function PostModal({ open, content, onClose, setProfile, photosCollection }) {\r\n    const [profileImg, setProfileImg] = useState()\r\n    const { user } = useContext(LoggedInUserContext)\r\n    const { posts, setPosts } = useContext(TimeLineContext)\r\n    const { pathname } = useLocation()\r\n\r\n    if (!open) return null\r\n\r\n    const unfollow = async () => {\r\n        // try {\r\n        //     await toggleFollow(true, content.author, user._id)\r\n        //     window.location = `/user/${user.username}`\r\n        // } catch (error) {\r\n        //     console.log(error);\r\n        // }\r\n    }\r\n\r\n    const notLikedPost = () => {\r\n        localStorage.setItem(\"dontLikePost\", JSON.stringify({ postId: content._id, author: content.author }))\r\n        setPosts(posts.filter(item => item._id != content._id))\r\n        onClose()\r\n    }\r\n\r\n    const deletePost = () => {\r\n        if (pathname == \"/\") {\r\n            setPosts(posts.filter(item => item._id != content._id))\r\n            // window.location = pathname\r\n        }\r\n        else\r\n            setPosts({ photosCollection: photosCollection.filter(item => item._id != content._id) })\r\n        deletePostById(content._id).then(() => {\r\n\r\n\r\n        }).catch(e => {\r\n            alert(\"Error while deleting the Post, generally check your internet\");\r\n            console.log(e, content);\r\n            if (pathname == \"/\") {\r\n                setPosts(prevPost => [...prevPost, content])\r\n                // window.location = pathname\r\n            }\r\n            else\r\n                setPosts({ photosCollection: photosCollection.push(content) })\r\n\r\n        })\r\n    }\r\n\r\n    return ReactDom.createPortal(\r\n        <>\r\n            <div className=\"modal-layout\" onClick={onClose}></div>\r\n            <div className=\"modal-box\">\r\n                <ul className=\"modal-box__list\">\r\n                    <li className=\"modal-box__item\" ><Link target=\"_blanck\" to={`/user/${content?.author}`} >Share</Link></li>\r\n                    {content.author != user.username && <li className=\"modal-box__item u-text-red-bold\" onClick={unfollow} >Unfollow</li>}\r\n                    {content.author == user.username && < li className=\"modal-box__item u-text-red-bold\" onClick={deletePost} >Delete Post</li>}\r\n                    {content.author != user.username && <li className=\"modal-box__item u-text-red-bold\" onClick={notLikedPost} >I don't link this Post</li>}\r\n                    <li className=\"modal-box__item\" onClick={onClose}>Cancel</li>\r\n                </ul>\r\n            </div>\r\n        </>,\r\n        document.getElementById(\"modal\")\r\n    )\r\n}\r\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { faEllipsisV, faHamburger } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DEFAULT_IMAGE_PATH } from '../../constants/paths';\nimport { deletePostById } from '../../services/postServices';\nimport PostModal from './postModal';\n\nexport default function Header({ username, profileImg, content, setProfile, photosCollection }) {\n  const [isModal, setModal] = useState(false)\n\n  return (\n    <div className=\"post__header\">\n\n      <Link to={`/user/${username}`} className=\"flex items-center\">\n        <img\n          className=\"post__header--img\"\n          src={profileImg ? profileImg : DEFAULT_IMAGE_PATH}\n          alt={`${username} profile picture`}\n        />\n        <p className=\"font-bold\">{username}</p>\n      </Link>\n      <div onClick={() => setModal(true)}><FontAwesomeIcon icon={faEllipsisV} /></div>\n      <PostModal content={content} open={isModal} onClose={() => setModal(false)} setProfile={setProfile} photosCollection={photosCollection} />\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  username: PropTypes.string.isRequired\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function Image({ files, caption }) {\n  const [counter, setCounter] = useState(0)\n  const increase = () => {\n    if (counter == files.length - 1) return null\n    setCounter(counter + 1)\n  }\n  const decrease = () => {\n    if (counter == 0) return null\n    setCounter(counter - 1)\n  }\n\n  return (\n    <div className=\"image-slider\">\n      <div className=\"image-slider__box\">\n        <img src={files[counter]} alt={caption} />\n        <>\n          {counter < (files.length - 1) &&\n            (\n              <button className=\"image-slider__btn image-slider__btn-inc\" onClick={increase}>\n                <FontAwesomeIcon icon={faArrowRight} />\n              </button>\n            )\n          }</>\n        {counter !== 0 && <button className=\"image-slider__btn image-slider__btn-dec\" onClick={decrease}>\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </button>}\n      </div>\n\n    </div>\n  );\n}\n\nImage.propTypes = {\n  files: PropTypes.array.isRequired,\n  caption: PropTypes.string.isRequired\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\n\nexport default function Footer({ caption, username }) {\n  const [newCap, setNewCap] = useState(\"\")\n  useEffect(() => {\n    setNewCap(caption.replace('\\n', '\\r'))\n  }, [caption])\n  return (\n    <div className=\"post__footer\">\n      <span className=\"post__footer--name\">{username}</span>\n      <span className=\"post__footer--caption\">{newCap}</span>\n    </div>\n  );\n}\n\nFooter.propTypes = {\n  caption: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired\n};\n","import { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './header';\nimport Image from './image';\nimport Actions from './actions';\nimport Footer from './footer';\nimport Comments from './comments';\nimport { getuserDisplayImgs } from '../../services/userServices';\n\nexport default function Post({ content, postref, setProfile, photosCollection }) {\n  const commentInput = useRef(null);\n  const [profileImg, setProfileImg] = useState()\n  const handleFocus = () => commentInput.current.focus();\n\n  const { files, caption, author } = content\n\n  useEffect(async () => {\n    const { displayImg } = await getuserDisplayImgs(author)\n    setProfileImg(displayImg.profileImg);\n  }, [])\n\n  // const result = caption.charCodeAt(0)\n  // console.log(caption, result);\n  // components\n  // -> header, image, actions (like & comment icons), footer, comments\n  return (\n    <div ref={postref} className=\"post\">\n      <Header content={content} username={content.author} profileImg={profileImg} setProfile={setProfile} photosCollection={photosCollection} />\n      <Image files={files} caption={content.author} />\n      {/* <Actions\n        docId={content.docId}\n        totalLikes={content.likes.length}\n        likedPhoto={content.userLikedPhoto}\n        handleFocus={handleFocus}\n      /> */}\n      <Footer caption={caption} username={author} />\n      {/* <Comments\n        docId={content.docId}\n        comments={content.comments}\n        posted={content.dateCreated}\n        commentInput={commentInput}\n      /> */}\n    </div>\n  );\n}\n\nPost.propTypes = {\n  content: PropTypes.shape({\n    author: PropTypes.string.isRequired,\n    files: PropTypes.array.isRequired,\n    caption: PropTypes.string.isRequired,\n    // docId: PropTypes.string.isRequired,\n    // userLikedPhoto: PropTypes.bool.isRequired,\n    // likes: PropTypes.array.isRequired,\n    // comments: PropTypes.array.isRequired,\n    date: PropTypes.string.isRequired\n  })\n};\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { updateProfileImg, removeProfileImg } from '../../services/userServices'\r\n\r\nexport default function PIModal({ open, user, onClose, setProfile }) {\r\n    const [profileImg, setProfileImg] = useState()\r\n\r\n    if (!open) return null\r\n\r\n    const removeImage = async () => {\r\n        try {\r\n            await removeProfileImg(user.username)\r\n            window.location = `/user/${user.username}`\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        if (!e.target.files.length) return;\r\n\r\n        let reader = new FileReader();\r\n        // Convert the file to base64 text\r\n        reader.readAsDataURL(e.target.files[0]);\r\n        console.log(e.target.files[0]);\r\n        // on reader load somthing...\r\n        reader.onload = async () => {\r\n            // Make a fileInfo Object\r\n            const baseURL = reader.result;\r\n            try {\r\n                const updatedImg = await updateProfileImg(user.username, baseURL)\r\n                console.log(updatedImg);\r\n                window.location = `/user/${user.username}`\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return ReactDom.createPortal(\r\n        <>\r\n            <div className=\"modal-layout\" onClick={onClose}></div>\r\n            <div className=\"modal-box\">\r\n                <div className=\"modal-box__heading heading-black\">Change Profile Photo</div>\r\n                <ul className=\"modal-box__list\">\r\n                    <label className=\"newpost__media\">\r\n                        <li className=\"modal-box__item\">\r\n                            Upload Image\r\n                            <input type=\"file\" style={{ opacity: 0, position: \"absolute\", left: \"-99999px\" }} onChange={handleSubmit} />\r\n                        </li>\r\n                    </label>\r\n                    <li className=\"modal-box__item\" onClick={removeImage} >Remove Image</li>\r\n                    <li className=\"modal-box__item\" onClick={onClose}>Cencel</li>\r\n                </ul>\r\n            </div>\r\n        </>,\r\n        document.getElementById(\"modal\")\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport UserContext from '../../context/user'\r\nimport { updateProfileImg, removeProfileImg } from '../../services/userServices'\r\n\r\nexport default function FollowerModal({ open, user, onClose }) {\r\n    const [profileImg, setProfileImg] = useState()\r\n\r\n    if (!open) return null\r\n\r\n    console.log(user);\r\n    const removeImage = async () => {\r\n        try {\r\n            await removeProfileImg(user.username)\r\n            window.location = `/user/${user.username}`\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        if (!e.target.files.length) return;\r\n\r\n        let reader = new FileReader();\r\n        // Convert the file to base64 text\r\n        reader.readAsDataURL(e.target.files[0]);\r\n        console.log(e.target.files[0]);\r\n        // on reader load somthing...\r\n        reader.onload = async () => {\r\n            // Make a fileInfo Object\r\n            const baseURL = reader.result;\r\n            try {\r\n                const updatedImg = await updateProfileImg(user.username, baseURL)\r\n                console.log(updatedImg);\r\n                window.location = `/user/${user.username}`\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return ReactDom.createPortal(\r\n        <>\r\n            <div className=\"modal-layout\" onClick={onClose}></div>\r\n            <div className=\"modal-box\">\r\n                <div className=\"modal-box__heading heading-black\">Followers</div>\r\n                <ul className=\"modal-box__list\">\r\n                    {user.followers.map((follower) => {\r\n                        <label className=\"newpost__media\">\r\n                            <li className=\"modal-box__item\">\r\n                                {follower}\r\n                                <input type=\"file\" style={{ opacity: 0, position: \"absolute\", left: \"-99999px\" }} onChange={handleSubmit} />\r\n                            </li>\r\n                        </label>\r\n                    })}\r\n\r\n                    <li className=\"modal-box__item\" onClick={onClose}>Cencel</li>\r\n                </ul>\r\n            </div>\r\n        </>,\r\n        document.getElementById(\"modal\")\r\n    )\r\n}\r\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from 'react-loading-skeleton';\nimport useUser from '../../hooks/use-user';\nimport { toggleFollow } from '../../services/userServices';\nimport UserContext from '../../context/user';\nimport { DEFAULT_IMAGE_PATH } from '../../constants/paths';\nimport PIModal from './pimodal'\nimport FollowerModal from './followerModal';\n\nexport default function Header({\n  photosCount,\n  followerCount,\n  setProfile,\n  displayImgs,\n  profile: {\n    _id: profileUserId,\n    fullName,\n    followers,\n    following,\n    username: profileUsername\n  }\n}) {\n  const { user: loggedInUser } = useContext(UserContext);\n  const { user } = useUser(loggedInUser?.username);\n  const [isFollowingProfile, setIsFollowingProfile] = useState(null);\n  const [ispiModal, setIspiModal] = useState(false)\n  const [isfollowerModal, setIsfollowerModal] = useState(false)\n  const [isfollowingModal, setIsfollowingModal] = useState(false)\n  // const [profileImg, setProfileImg] = useState();\n  const activeBtnFollow = user?.username && user?.username !== profileUsername;\n\n  const handleToggleFollow = async () => {\n    setIsFollowingProfile((isFollowingProfile) => !isFollowingProfile);\n    setProfile({\n      followerCount: isFollowingProfile ? followerCount - 1 : followerCount + 1\n    });\n    await toggleFollow(isFollowingProfile, profileUserId, user._id);\n  };\n\n  useEffect(() => {\n    const isLoggedInUserFollowingProfile = () => {\n      // const isFollowing = await isUserFollowingProfile(user.username, profileUserId);\n      const isFollowing = followers.filter(item => item._id == user._id)\n      setIsFollowingProfile(!!isFollowing.length);\n    };\n\n    if (user?.username && profileUserId) {\n      isLoggedInUserFollowingProfile();\n    }\n  }, [user?.username, profileUserId]);\n\n\n  return (\n    <>\n      <div className=\"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg\">\n        <div className=\"container flex justify-center items-center\">\n          {profileUsername ? (\n            <img\n              onClick={() => setIspiModal(true)}\n              className=\"rounded-full h-40 w-40 flex\"\n              alt={`${fullName} profile picture`}\n              src={displayImgs ? displayImgs.profileImg : DEFAULT_IMAGE_PATH}\n              onError={(e) => {\n                e.target.src = DEFAULT_IMAGE_PATH;\n              }}\n            />\n          ) : (\n            <Skeleton circle height={150} width={150} count={1} />\n          )}\n        </div>\n\n        <PIModal setProfile={setProfile} open={ispiModal} user={user} onClose={() => setIspiModal(false)} />\n\n        <div className=\"flex items-center justify-center flex-col col-span-2\">\n          <div className=\"container flex items-center\">\n            <p className=\"text-2xl mr-4\">{profileUsername}</p>\n            {activeBtnFollow && isFollowingProfile === null ? (\n              <Skeleton count={1} width={60} height={32} />\n            ) : (\n              activeBtnFollow && (\n                <button\n                  className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\"\n                  type=\"button\"\n                  onClick={handleToggleFollow}\n                  onKeyDown={(event) => {\n                    if (event.key === 'Enter') {\n                      handleToggleFollow();\n                    }\n                  }}\n                >\n                  {isFollowingProfile ? 'Unfollow' : 'Follow'}\n                </button>\n              )\n            )}\n          </div>\n          <div className=\"container flex mt-4\">\n            {!followers || !following ? (\n              <Skeleton count={1} width={500} height={24} />\n            ) : (\n              <>\n                <p className=\"mr-10\">\n                  <span className=\"font-bold\">{photosCount}</span> photos\n                </p>\n                <p className=\"mr-10\" onClick={() => setIsfollowerModal(true)}>\n                  <span className=\"font-bold\">{followerCount}</span>\n                  {` `}\n                  {followerCount === 1 ? `follower` : `followers`}\n                </p>\n                <FollowerModal open={isfollowerModal} user={user} onClose={() => setIsfollowerModal(false)} />\n                <p className=\"mr-10\" onClick={() => setIsfollowingModal(true)}>\n                  <span className=\"font-bold\">{following?.length}</span> following\n                </p>\n              </>\n            )}\n          </div>\n          <div className=\"container mt-4\">\n            <p className=\"font-medium\">{!fullName ? <Skeleton count={1} height={24} /> : fullName}</p>\n          </div>\n        </div>\n      </div>\n\n    </>\n  );\n}\n\nHeader.propTypes = {\n  photosCount: PropTypes.number.isRequired,\n  followerCount: PropTypes.number.isRequired,\n  setProfile: PropTypes.func.isRequired,\n  profile: PropTypes.shape({\n    docId: PropTypes.string,\n    userId: PropTypes.string,\n    fullName: PropTypes.string,\n    username: PropTypes.string,\n    followers: PropTypes.array,\n    following: PropTypes.array\n  }).isRequired\n};\n","import { useReducer, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './header';\nimport Skeleton from 'react-loading-skeleton';\nimport Post from '../post';\nimport { getUserPhotosByUsername } from '../../services/postServices';\nimport { getuserDisplayImgs } from '../../services/userServices';\nimport { NEWPOST } from '../../constants/routes';\nimport TimeLineContext from '../../context/timeline';\n\nexport default function Profile({ user }) {\n  const reducer = (state, newState) => ({ ...state, ...newState });\n  const initialState = {\n    profile: {},\n    photosCollection: null,\n    followerCount: 0,\n    displayImgs: {}\n  };\n  const [{ profile, photosCollection, followerCount, displayImgs }, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n\n  useEffect(() => {\n    async function getProfileInfoAndPhotos() {\n      const photos = await getUserPhotosByUsername(user.username)\n      const sortedPost = photos.sort((a, b) => {\n        const dateA = new Date(a.date), dateB = new Date(b.date)\n        return dateB - dateA\n      })\n      const { displayImg } = await getuserDisplayImgs(user.username)\n      dispatch({ profile: user, photosCollection: sortedPost, followerCount: user.followers.length, displayImgs: displayImg });\n    }\n    getProfileInfoAndPhotos();\n  }, [user.username]);\n\n  return (\n    <>\n      <TimeLineContext.Provider value={{ user, posts: photosCollection, setPosts: dispatch }}>\n        <Header\n          photosCount={photosCollection ? photosCollection.length : 0}\n          profile={profile}\n          followerCount={followerCount}\n          displayImgs={displayImgs}\n          setProfile={dispatch}\n        />\n        {!photosCollection ? (\n          <Skeleton count={4} width={640} height={500} className=\"mb-5\" />\n        ) : (\n          <>\n            {photosCollection.length ?\n              (photosCollection.map((content) => <Post key={content._id} content={content} profileImg={displayImgs.profileImg} setProfile={dispatch} photosCollection={photosCollection} />)\n              ) : (\n                <div className=\"nopost\">\n                  <div className=\"nopost-no heading-main\">No Post</div>\n                  <div className=\"nopost-to\"><a href={NEWPOST}>Click Here</a> To Post</div>\n                </div>\n              )} </>)}\n      </TimeLineContext.Provider>\n    </>\n  );\n}\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    date: PropTypes.number,\n    email: PropTypes.string,\n    followers: PropTypes.array,\n    following: PropTypes.array,\n    fullName: PropTypes.string,\n    _id: PropTypes.string,\n    username: PropTypes.string\n  })\n};\n","import { useParams, useHistory } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getusersFollowing, getusersFollowers, getUserByUsername } from '../services/userServices'\nimport * as ROUTES from '../constants/routes';\nimport Header from '../components/header';\nimport UserProfile from '../components/profile';\n\nexport default function Profile() {\n  const { username } = useParams();\n  const [user, setUser] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n\n    async function checkUserExists() {\n      const user = await getUserByUsername(username);\n      const followers = await getusersFollowers(username);\n      const following = await getusersFollowing(username);\n      if (user?._id) {\n        setUser({ ...user, followers: followers, following: following });\n\n      } else {\n        history.push(ROUTES.NOT_FOUND);\n      }\n    }\n    checkUserExists();\n  }, [username, history]);\n\n  return user?.username ? (\n    <div className=\"bg-gray-background\">\n      <div className=\"mx-auto max-w-screen-lg\">\n        <UserProfile user={user} />\n      </div>\n    </div>\n  ) : null;\n}\n","import axios from 'axios';\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = apiUrl + \"/post\";\r\n\r\nexport const postByUsername = async (files, caption, username, progress) => {\r\n    try {\r\n        const { data } = await axios.post(`${apiEndpoint}/${username}`,\r\n            { files, caption }, progress);\r\n        return { data };\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const retrivePostByUsername = async (username) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\n\r\nexport const getUserPhotosByUsername = async (username) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/user-posts/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const retrivePostByUserId = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/userId/${userId}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const getPost = async (userId, page, limit) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/all-posts/${userId}`, {\r\n            params: { page: page, limit: limit }\r\n        });\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const deletePostById = async (postId) => {\r\n    try {\r\n        const response = await axios.delete(`${apiEndpoint}/delete/${postId}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        return err.response.data.error;\r\n    }\r\n};"],"sourceRoot":""}