{"version":3,"sources":["components/leftbar/searchBar.js","hooks/use-search.js","components/header.js","components/toggleBar.js","components/leftbar.js","pages/dashboard.js","services/userServices.js","context/logged-in-user.js","constants/paths.js","hooks/use-user.js"],"names":["SearchBar","history","useHistory","useState","search","setSearch","useContext","LoggedInUserContext","setSearchResult","searchResult","pageNumber","setPageNumber","query","loading","setLoading","error","setError","result","setResult","hasMore","setMore","apiEndpoint","apiUrl","useEffect","cancel","axios","method","url","params","page","limit","cancelToken","CancelToken","c","then","res","console","log","data","length","catch","e","isCancel","useSearch","className","id","onChange","target","value","push","placeholder","icon","faSearch","onClick","document","getElementById","faTimes","src","LOADING_ANI_PATH","ToggleBar","show","onClose","user","loggedInUser","ReactDom","createPortal","to","username","faUser","ROUTES","faBookmark","faList","faCog","faIdCard","faUniversity","logout","window","location","onKeyDown","event","key","faSignOutAlt","Leftbar","setShow","setProfileImg","UserContext","useUser","a","getuserDisplayImgs","displayImg","profileImg","DEFAULT_IMAGE_PATH","err","faHome","faBook","faPlus","Request","lazy","Material","SearchResult","Newpost","Bookshell","Dashboard","setActiveUser","useRouteMatch","path","title","Provider","exact","from","component","getUserByUsername","usernameOrEmail","get","response","updateProfileImg","put","removeProfileImg","delete","getusersFollowing","getusersFollowers","toggleFollow","isFollowingProfile","profileUserId","followingUserId","createContext","activeUser","followers","following","getUserObjByUserId"],"mappings":"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","file":"static/js/10.6e08f06e.chunk.js","sourcesContent":["import { faCircle, faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DEFAULT_IMAGE_PATH, LOADING_ANI_PATH } from '../../constants/paths';\r\nimport useSearch from '../../hooks/use-search';\r\nimport LoadingAni from '../loadingAni';\r\nimport { Link } from 'react-router-dom';\r\nimport LoggedInUserContext from '../../context/logged-in-user';\r\n\r\nexport default function SearchBar() {\r\n    let history = useHistory();\r\n    const [search, setSearch] = useState()\r\n    const { searchResult, setSearchResult } = useContext(LoggedInUserContext);\r\n    // const [searchResult, setSearchResult] = useState([])\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n\r\n    const handleSearch = (e) => {\r\n        // e.preventDefault() \r\n        setSearch(e.target.value)\r\n        setPageNumber(1)\r\n        history.push(\"/search-result\");\r\n    }\r\n\r\n    const { result, hasMore, loading, error } = useSearch(search, pageNumber)\r\n\r\n    useEffect(() => {\r\n        if (!loading)\r\n            setSearchResult(result)\r\n        if (!search)\r\n            setSearchResult([])\r\n    }, [result, loading])\r\n\r\n\r\n    const handleClear = () => {\r\n        setSearch(\"\")\r\n        let input = document.getElementById('input')\r\n        input.value = \"\"\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"search-box\">\r\n                <input id=\"input\" className=\"search__input\" onChange={handleSearch} placeholder=\"Search Users\" />\r\n                {!search && <div className=\"search__icon\"><FontAwesomeIcon icon={faSearch} /></div>}\r\n                {search && !loading && <FontAwesomeIcon onClick={handleClear} icon={faTimes} />}\r\n                {loading && <img className=\"search__loading\" src={LOADING_ANI_PATH} />}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport default function useSearch(query, pageNumber) {\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n    const [result, setResult] = useState([]);\r\n    const [hasMore, setMore] = useState(false)\r\n    const apiEndpoint = apiUrl + \"/post\";\r\n\r\n    useEffect(() => {\r\n        setResult([])\r\n    }, [query])\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setError(false)\r\n        let cancel;\r\n        axios({\r\n            method: 'GET',\r\n            url: `${apiEndpoint}/search/${query}`,\r\n            params: { page: pageNumber, limit: 5 },\r\n            cancelToken: new axios.CancelToken(c => cancel = c)\r\n        }).then((res) => {\r\n            console.log(res);\r\n            setMore(res.data.length > 0)\r\n            setLoading(false)\r\n            setResult(res.data)\r\n        }).catch(e => {\r\n            if (axios.isCancel(e)) return\r\n            setError(true)\r\n            setLoading(false)\r\n            console.log(e);\r\n        })\r\n        return () => cancel()\r\n    }, [query, pageNumber]);\r\n\r\n    return { result, loading, error, hasMore };\r\n}\r\n","import { useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport UserContext from '../context/user';\nimport * as ROUTES from '../constants/routes';\nimport { DEFAULT_IMAGE_PATH } from '../constants/paths';\nimport useUser from '../hooks/use-user';\nimport SearchBar from './leftbar/searchBar';\n\nexport default function Header() {\n  const { user: loggedInUser } = useContext(UserContext);\n  const { user } = useUser(loggedInUser?.uid);\n  const history = useHistory();\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__logo\">\n        <h1 className=\"flex justify-center w-full\">\n          <Link to={ROUTES.DASHBOARD} aria-label=\" logo\" className=\"heading-logo\">\n            BookShell\n          </Link>\n        </h1>\n      </div>\n\n      {/* <SearchBar /> */}\n\n      <div className=\"header__input\">\n        {loggedInUser ? (\n          <>\n            <Link to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\n              <svg\n                className=\"w-8 mr-6 text-black-light cursor-pointer\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n                />\n              </svg>\n            </Link>\n\n            <button\n              type=\"button\"\n              title=\"Sign Out\"\n              onClick={() => {\n                // firebase.auth().signOut();\n                history.push(ROUTES.LOGIN);\n              }}\n              onKeyDown={(event) => {\n                if (event.key === 'Enter') {\n                  // firebase.auth().signOut();\n                  history.push(ROUTES.LOGIN);\n                }\n              }}\n            >\n              <svg\n                className=\"w-8 mr-6 text-black-light cursor-pointer\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                />\n              </svg>\n            </button>\n            {user && (\n              <div className=\"flex items-center cursor-pointer\">\n                <Link to={`/p/${user?.username}`}>\n                  <img\n                    className=\"rounded-full h-8 w-8 flex\"\n                    src={`/images/avatars/${user?.username}.jpg`}\n                    alt={`${user?.username} profile`}\n                    onError={(e) => {\n                      e.target.src = DEFAULT_IMAGE_PATH;\n                    }}\n                  />\n                </Link>\n              </div>\n            )}\n          </>\n        ) : (\n          <>\n            <Link to={ROUTES.LOGIN}>\n              <button\n                type=\"button\"\n                className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\"\n              >\n                Log In\n              </button>\n            </Link>\n            <Link to={ROUTES.SIGN_UP}>\n              <button\n                type=\"button\"\n                className=\"font-bold text-sm rounded text-blue-medium w-20 h-8\"\n              >\n                Sign Up\n              </button>\n            </Link>\n          </>\n        )}\n      </div>\n    </header>\n  );\n}\n","import React from 'react'\r\nimport * as ROUTES from '../constants/routes';\r\nimport { Link } from 'react-router-dom';\r\nimport { faBookmark, faCog, faIdCard, faList, faSignOutAlt, faTimes, faUniversity, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { logout } from '../services/authenticationServices';\r\nimport ReactDom from 'react-dom'\r\n\r\nexport default function ToggleBar({ show, onClose, user, loggedInUser }) {\r\n    if (!show) return null\r\n    return ReactDom.createPortal(\r\n        <>\r\n            <div className=\"togglebar-overlay\" onClick={onClose}></div>\r\n            <div className=\"toggle-sidebar\">\r\n                <div className=\"toggle-sidebar__close\" onClick={onClose}>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n                <ul>\r\n                    <li className=\"toggle-sidebar__item\">\r\n                        <Link className=\"toggle-sidebar__link\" to={`/user/${user?.username}`} aria-label=\"Dashboard\">\r\n                            <span className=\"toggle-sidebar__link--icon\">\r\n                                <FontAwesomeIcon icon={faUser} /></span>\r\n                            <span className=\"toggle-sidebar__link--text\">Profile</span>\r\n                        </Link>\r\n                    </li>\r\n                    {loggedInUser ? (\r\n                        <>\r\n                            <li className=\"toggle-sidebar__item\">\r\n                                <Link className=\"toggle-sidebar__link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                    <span className=\"toggle-sidebar__link--icon\">\r\n                                        <FontAwesomeIcon icon={faBookmark} />\r\n                                    </span>\r\n                                    <span className=\"toggle-sidebar__link--text\">Bookmarks</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"toggle-sidebar__item\">\r\n                                <Link className=\"toggle-sidebar__link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                    <span className=\"toggle-sidebar__link--icon\">\r\n                                        <FontAwesomeIcon icon={faList} />\r\n                                    </span>\r\n                                    <span className=\"toggle-sidebar__link--text\">List</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"toggle-sidebar__item\">\r\n                                <Link className=\"toggle-sidebar__link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                    <span className=\"toggle-sidebar__link--icon\">\r\n                                        <FontAwesomeIcon icon={faCog} />\r\n                                    </span>\r\n                                    <span className=\"toggle-sidebar__link--text\">Settings</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"toggle-sidebar__item\">\r\n                                <Link className=\"toggle-sidebar__link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                    <span className=\"toggle-sidebar__link--icon\">\r\n                                        <FontAwesomeIcon icon={faIdCard} />\r\n                                    </span>\r\n                                    <span className=\"toggle-sidebar__link--text\">Your Cards</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"toggle-sidebar__item\">\r\n                                <Link className=\"toggle-sidebar__link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                    <span className=\"toggle-sidebar__link--icon\">\r\n                                        <FontAwesomeIcon icon={faUniversity} />\r\n                                    </span>\r\n                                    <span className=\"toggle-sidebar__link--text\">Add Bank</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"toggle-sidebar__item\"\r\n                                onClick={() => {\r\n                                    logout();\r\n                                    window.location = ROUTES.LOGIN\r\n                                }}\r\n                                onKeyDown={(event) => {\r\n                                    if (event.key === 'Enter') {\r\n                                        logout();\r\n                                        window.location = ROUTES.LOGIN\r\n                                    }\r\n                                }}>\r\n                                <div className=\"toggle-sidebar__link\" >\r\n                                    <span className=\"toggle-sidebar__link--icon\">\r\n                                        <FontAwesomeIcon icon={faSignOutAlt} />\r\n                                    </span>\r\n                                    <span className=\"toggle-sidebar__link--text\">Log Out</span>\r\n                                </div>\r\n                            </li>\r\n                        </>) : (\r\n                        <li className=\"link-list-item link-list-item--newpost\" >\r\n                            <Link className=\"link\" to={ROUTES.LOGIN} aria-label=\"Newpost\">\r\n                                <span className=\"link--icon\">\r\n                                    <FontAwesomeIcon icon={faSignOutAlt} /></span>\r\n                                <span className=\"link--text\">Log In</span>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                    }                    </ul>\r\n            </div>\r\n        </>,\r\n        document.getElementById(\"togglebar\")\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport * as ROUTES from '../constants/routes';\r\nimport { Link, Route, useHistory } from 'react-router-dom';\r\nimport { faBars, faBell, faBook, faBookmark, faChild, faCog, faHome, faIdCard, faList, faMailBulk, faPlus, faSignOutAlt, faUniversity, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport UserContext from '../context/user';\r\nimport useUser from '../hooks/use-user';\r\nimport ToggleBar from './toggleBar';\r\nimport { getuserDisplayImgs } from '../services/userServices';\r\nimport { useEffect } from 'react';\r\nimport { DEFAULT_IMAGE_PATH } from '../constants/paths';\r\nimport { logout } from '../services/authenticationServices';\r\n\r\nexport default function Leftbar() {\r\n    const [show, setShow] = useState(false)\r\n    const [profileImg, setProfileImg] = useState()\r\n    const { user: loggedInUser } = useContext(UserContext);\r\n    const { user } = useUser(loggedInUser?.username);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(async () => {\r\n        await getuserDisplayImgs(user?.username).then((res) => {\r\n            !res.displayImg || res.displayImg.profileImg.length ?\r\n                setProfileImg(res.displayImg.profileImg)\r\n                :\r\n                setProfileImg(DEFAULT_IMAGE_PATH)\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n\r\n        // setProfileImg(result?.displayImg?.profileImg)\r\n\r\n    }, [user])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"leftbar__toglebar\">\r\n                <ToggleBar show={show} user={user} loggedInUser={loggedInUser} onClose={() => setShow(false)} />\r\n            </div>\r\n\r\n            <div className=\"leftbar\">\r\n                <ul className=\"link-list\">\r\n                    <li className=\"link-list-item\">\r\n                        <Link className=\"u-center-text heading-logo\" to={ROUTES.DASHBOARD} aria-label=\"LOGO\">\r\n                            Book'n'things\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"link-list-item\">\r\n                        <Link className=\"link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                            <span className=\"link--icon\">\r\n                                <FontAwesomeIcon icon={faHome} /></span>\r\n                            <span className=\"link--text\">My Library</span>\r\n                        </Link>\r\n                    </li>\r\n                    {loggedInUser && <>\r\n                        <li className=\"link-list-item\">\r\n                            <Link className=\"link\" to={ROUTES.REQUEST} aria-label=\"Bookshell\">\r\n                                <span className=\"link--icon\">\r\n                                    <FontAwesomeIcon icon={faBook} />\r\n                                </span>\r\n                                <span className=\"link--text\">Request Your Book</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"link-list-item\">\r\n                            <Link className=\"link\" to={ROUTES.BOOKSHELL} aria-label=\"Bookshell\">\r\n                                <span className=\"link--icon\">\r\n                                    <FontAwesomeIcon icon={faCog} />\r\n                                </span>\r\n                                <span className=\"link--text\">Settings</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"toggle-sidebar__item\">\r\n                            <Link className=\"toggle-sidebar__link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                <span className=\"toggle-sidebar__link--icon\">\r\n                                    <FontAwesomeIcon icon={faIdCard} />\r\n                                </span>\r\n                                <span className=\"toggle-sidebar__link--text\">Your Cards</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"toggle-sidebar__item\">\r\n                            <Link className=\"toggle-sidebar__link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                <span className=\"toggle-sidebar__link--icon\">\r\n                                    <FontAwesomeIcon icon={faUniversity} />\r\n                                </span>\r\n                                <span className=\"toggle-sidebar__link--text\">Add Bank</span>\r\n                            </Link>\r\n                        </li>\r\n\r\n\r\n                    </>\r\n                    }\r\n                    {loggedInUser ? (\r\n                        <>\r\n                            <li className=\"toggle-sidebar__item\"\r\n                                onClick={() => {\r\n                                    logout();\r\n                                    window.location = ROUTES.LOGIN\r\n                                }}\r\n                                onKeyDown={(event) => {\r\n                                    if (event.key === 'Enter') {\r\n                                        logout();\r\n                                        window.location = ROUTES.LOGIN\r\n                                    }\r\n                                }}>\r\n                                <div className=\"toggle-sidebar__link\" >\r\n                                    <span className=\"toggle-sidebar__link--icon\">\r\n                                        <FontAwesomeIcon icon={faSignOutAlt} />\r\n                                    </span>\r\n                                    <span className=\"toggle-sidebar__link--text\">Log Out</span>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"link-list-item link-list-item--newpost\" >\r\n                                <Link className=\"link\" to={ROUTES.NEWPOST} aria-label=\"Newpost\">\r\n                                    <span className=\"link--icon\">\r\n                                        <FontAwesomeIcon icon={faPlus} /></span>\r\n                                    <span className=\"link--text\">New Post</span>\r\n                                </Link>\r\n                            </li>\r\n                        </>) : (\r\n                        <li className=\"link-list-item link-list-item--newpost\" >\r\n                            <Link className=\"link\" to={ROUTES.LOGIN} aria-label=\"Newpost\">\r\n                                <span className=\"link--icon\">\r\n                                    <FontAwesomeIcon icon={faSignOutAlt} /></span>\r\n                                <span className=\"link--text\">Log In</span>\r\n                            </Link>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, lazy, Suspense, useState } from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch, useRouteMatch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { faBell, faHome, faMailBulk, faPlusSquare, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as ROUTES from '../constants/routes';\nimport useUser from '../hooks/use-user';\nimport LoggedInUserContext from '../context/logged-in-user';\nimport Leftbar from '../components/leftbar';\nimport Header from '../components/header';\nimport SearchBar from '../components/leftbar/searchBar';\n\nconst Request = lazy(() => import('../components/newpost/request'));\nconst Material = lazy(() => import('../components/leftbar/material'));\nconst SearchResult = lazy(() => import('../components/leftbar/searchResult'));\nconst Newpost = lazy(() => import('../components/newpost/newpost'));\nconst Bookshell = lazy(() => import('../components/bookshell/bookshell'));\n\nexport default function Dashboard({ user: loggedInUser }) {\n  const [show, setShow] = useState(false)\n  const [searchResult, setSearchResult] = useState([])\n  const userId = loggedInUser ? loggedInUser.id : null\n  const username = loggedInUser ? loggedInUser.username : null\n  const { user, setActiveUser } = useUser(username);\n  let { path, url } = useRouteMatch();\n\n  useEffect(() => {\n    document.title = \"Book'N'Things\";\n  }, []);\n  return (\n    <LoggedInUserContext.Provider value={{ user, setActiveUser, searchResult, setSearchResult }}>\n\n      {/* <Header /> */}\n\n      <div className=\"dashboard\">\n\n        <div className=\"dashboard__leftbar\">\n          <Leftbar path={path} url={url} />\n        </div>\n        <div className=\"dashboard__main\">\n          <div className=\"dashboard__searchbar\">\n            <SearchBar searchResult={searchResult} setSearchResult={setSearchResult} />\n          </div>\n\n          <Switch>\n\n            <Redirect exact from={ROUTES.DASHBOARD} to={ROUTES.BOOKSHELL} />\n            <Route path={ROUTES.BOOKSHELL} component={Bookshell} />\n            <Route path={ROUTES.REQUEST} component={Request} />\n            <Route path={ROUTES.NEWPOST} component={Newpost} />\n            <Route path={ROUTES.SEARCHRESULT} component={SearchResult} />\n            <Route path={ROUTES.MATERIAL} component={Material} />\n          </Switch>\n        </div>\n\n      </div>\n\n    </LoggedInUserContext.Provider>\n  );\n}\n\nDashboard.propTypes = {\n  user: PropTypes.object.isRequired\n};\n","import axios from 'axios';\r\nimport { apiUrl } from \"../config.json\";\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst apiEndpoint = apiUrl + \"/user\";\r\nconst tokenKey = \"token\"\r\n\r\nexport const getUserByUsername = async (usernameOrEmail) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/username/${usernameOrEmail}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n}\r\n\r\nexport const searchUser = async (usernameOrname, pageNumber, limit, cancel) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/search/${usernameOrname}`, {\r\n            params: { page: pageNumber, limit: limit },\r\n            cancelToken: new axios.CancelToken(c => cancel = c)\r\n        });\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n}\r\n\r\nexport const updateProfileImg = async (username, profileImg) => {\r\n    try {\r\n        const response = await axios.put(`${apiEndpoint}/profile-img/${username}`,\r\n            { profileImg }\r\n        );\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n};\r\n\r\nexport const removeProfileImg = async (username, profileImg) => {\r\n    try {\r\n        const response = await axios.delete(`${apiEndpoint}/profile-img/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n};\r\n\r\nexport const getuserDisplayImgs = async (username) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/display-imgs/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n};\r\n\r\nexport const getusersFollowing = async (usernameOrEmail) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/username/following/${usernameOrEmail}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n}\r\n\r\nexport const getusersFollowers = async (usernameOrEmail) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/username/followers/${usernameOrEmail}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n}\r\n\r\nexport const toggleFollow = async (isFollowingProfile,\r\n    profileUserId,\r\n    followingUserId) => {\r\n    if (isFollowingProfile) {\r\n        console.log(\"unfollwing\");\r\n        //remove followingUserId from profileUserId's follower list\r\n        //remove profileUserId from followingUserId's following list\r\n        await axios.put(`${apiEndpoint}/unfollow/${profileUserId}`, {\r\n            followingUserId\r\n        })\r\n    }\r\n    else {\r\n        console.log(\"follow\");\r\n        //add followingUserId in profileUserId's follower list\r\n        //add profileUserId's from followingUserId's following list\r\n        await axios.put(`${apiEndpoint}/follow/${profileUserId}`, {\r\n            followingUserId\r\n        })\r\n\r\n    }\r\n}","import { createContext } from 'react';\n\nconst LoggedInUserContext = createContext(null);\nexport default LoggedInUserContext;\n","export const DEFAULT_IMAGE_PATH = '/images/avatars/default.png';\nexport const LOADING_ANI_PATH = '/loading.svg';\n","import { useState, useEffect } from 'react';\nimport { getUserByUsername, getusersFollowers, getusersFollowing, getuserDisplayImgs } from '../services/userServices';\n\nexport default function useUser(username) {\n  const [activeUser, setActiveUser] = useState();\n\n  useEffect(() => {\n    async function getUserObjByUserId(username) {\n      const user = await getUserByUsername(username);\n      const followers = await getusersFollowers(username);\n      const following = await getusersFollowing(username);\n      const { displayImg } = await getuserDisplayImgs(username);\n      console.log(displayImg);\n      setActiveUser({ ...user, followers: followers, following: following, displayImg: displayImg } || {});\n    }\n\n    if (username) {\n      getUserObjByUserId(username);\n    }\n  }, [username]);\n  console.log(activeUser);\n  return { user: activeUser, setActiveUser };\n}\n"],"sourceRoot":""}