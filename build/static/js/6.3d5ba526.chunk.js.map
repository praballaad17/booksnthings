{"version":3,"sources":["hooks/use-photos.js","components/leftbar/searchBar.js","hooks/use-search.js","components/header.js","components/profile/pimodal.js","components/profile/followerModal.js","components/profile/header.js","context/timeline.js","components/post/postModal.js","components/post/header.js","components/post/image.js","components/post/footer.js","components/post/payModel.js","components/post/index.js","components/profile/index.js","hooks/useProfilePost.js","pages/profile.js","services/postServices.js","services/userServices.js","context/logged-in-user.js","constants/paths.js","hooks/use-user.js"],"names":["usePhotos","user","pageNumber","useState","loading","setLoading","error","setError","posts","setPosts","hasMore","setMore","useEffect","getTimelinePhotos","a","following","length","getPost","_id","post","prevPost","result","console","log","userId","SearchBar","history","useHistory","search","setSearch","useContext","LoggedInUserContext","setSearchResult","searchResult","setPageNumber","query","setResult","apiEndpoint","apiUrl","cancel","axios","method","url","params","page","limit","cancelToken","CancelToken","c","then","res","data","catch","e","isCancel","useSearch","className","id","onChange","target","value","push","placeholder","icon","faSearch","onClick","document","getElementById","faTimes","src","LOADING_ANI_PATH","PIModal","open","onClose","setProfile","removeImage","removeProfileImg","username","window","location","ReactDom","createPortal","type","style","opacity","position","left","files","reader","FileReader","readAsDataURL","onload","baseURL","updateProfileImg","updatedImg","FollowerModal","followers","map","follower","Header","photosCount","followerCount","displayImgs","profile","profileUserId","fullName","profileUsername","loggedInUser","UserContext","useUser","isFollowingProfile","setIsFollowingProfile","ispiModal","setIspiModal","isfollowerModal","setIsfollowerModal","setIsfollowingModal","activeBtnFollow","handleToggleFollow","toggleFollow","isFollowing","filter","item","isLoggedInUserFollowingProfile","alt","profileImg","DEFAULT_IMAGE_PATH","onError","circle","height","width","count","onKeyDown","event","key","TimeLineContext","createContext","PostModal","content","photosCollection","pathname","useLocation","unfollow","to","author","deletePostById","alert","localStorage","setItem","JSON","stringify","postId","isModal","setModal","faEllipsisV","Image","caption","counter","setCounter","faArrowRight","faArrowLeft","Footer","newCap","setNewCap","replace","PayModal","displayImg","Post","postref","useRef","setProfileImg","payModel","setPayModel","paid","getuserDisplayImgs","ref","isPaid","hasPaid","faLock","price","Profile","logginUser","logginUserId","getProfilePost","getUserPhotosByUsername","useProfilePost","observer","lastPostRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prePage","observe","useReducer","state","newState","dispatch","getProfileInfoAndPhotos","Provider","index","href","NEWPOST","useParams","setUser","getUserByUsername","getusersFollowers","getusersFollowing","ROUTES","checkUserExists","postByUsername","title","progress","Error","response","getUserMaterialByUsername","get","getMaterialByTitle","buyMaterialById","materialId","getUserPurcMaterialByUserId","addReview","message","getReviewByMaterialId","delete","usernameOrEmail","put","followingUserId","activeUser","setActiveUser","getUserObjByUserId"],"mappings":"yMAGe,SAASA,EAAUC,EAAMC,GACtC,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA2BN,oBAAS,GAApC,mBAAOO,EAAP,KAAgBC,EAAhB,KAuBA,OArBAC,oBAAS,sBAAC,iBAGOC,EAHP,WAAAC,EAAA,0FAAAA,EAAA,MAGR,8BAAAA,EAAA,4DAEU,OAAJb,QAAI,IAAJA,GAAA,UAAAA,EAAMc,iBAAN,eAAiBC,QAAS,GAFhC,0CAIyBC,YAAQhB,EAAKiB,IAAKhB,EAAY,GAJvD,OAIYiB,EAJZ,OAKMV,GAAS,SAAAW,GAAc,MAAM,GAAN,mBAAWA,GAAX,YAAwBD,EAAKE,YACpDV,EAAQQ,EAAKE,OAAOL,OAAS,GAC7BX,GAAW,GAPjB,kDASME,GAAS,GACTe,QAAQC,IAAR,MAVN,2DAHQ,uBAGOV,EAHP,2CACRR,GAAW,GACXE,GAAS,GAgBTM,IAlBQ,2CAmBP,QAACZ,QAAD,IAACA,OAAD,EAACA,EAAMuB,OAAP,OAAevB,QAAf,IAAeA,OAAf,EAAeA,EAAMc,UAAWb,IAE5B,CAAEM,QAAOJ,UAASE,QAAOI,UAASD,c,qKCpB5B,SAASgB,IACpB,IAAIC,EAAUC,cACd,EAA4BxB,qBAA5B,mBAAOyB,EAAP,KAAeC,EAAf,KACA,EAA0CC,qBAAWC,KAA/BC,GAAtB,EAAQC,aAAR,EAAsBD,iBAEtB,EAAoC7B,mBAAS,GAA7C,mBAAOD,EAAP,KAAmBgC,EAAnB,KASA,ECpBW,SAAmBC,EAAOjC,GACrC,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAAS,IAArC,mBAAOkB,EAAP,KAAee,EAAf,KACA,EAA2BjC,oBAAS,GAApC,mBAAOO,EAAP,KAAgBC,EAAhB,KACM0B,EAAcC,IAAS,QA6B7B,OA3BA1B,qBAAU,WACNwB,EAAU,MACX,CAACD,IAEJvB,qBAAU,WAGN,IAAI2B,EAiBJ,OAnBAlC,GAAW,GACXE,GAAS,GAETiC,IAAM,CACFC,OAAQ,MACRC,IAAI,GAAD,OAAKL,EAAL,mBAA2BF,GAC9BQ,OAAQ,CAAEC,KAAM1C,EAAY2C,MAAO,GACnCC,YAAa,IAAIN,IAAMO,aAAY,SAAAC,GAAC,OAAIT,EAASS,OAClDC,MAAK,SAACC,GACL5B,QAAQC,IAAI2B,GACZvC,EAAQuC,EAAIC,KAAKnC,OAAS,GAC1BX,GAAW,GACX+B,EAAUc,EAAIC,SACfC,OAAM,SAAAC,GACDb,IAAMc,SAASD,KACnB9C,GAAS,GACTF,GAAW,GACXiB,QAAQC,IAAI8B,OAET,kBAAMd,OACd,CAACJ,EAAOjC,IAEJ,CAAEmB,SAAQjB,UAASE,QAAOI,WDdW6C,CAAU3B,EAAQ1B,GAAtDmB,EAAR,EAAQA,OAAiBjB,GAAzB,EAAgBM,QAAhB,EAAyBN,SAAzB,EAAkCE,MAElCM,qBAAU,WACDR,GACD4B,EAAgBX,GACfO,GACDI,EAAgB,MACrB,CAACX,EAAQjB,IAQZ,OACI,8BACI,sBAAKoD,UAAU,aAAf,UACI,uBAAOC,GAAG,QAAQD,UAAU,gBAAgBE,SAzBnC,SAACL,GAElBxB,EAAUwB,EAAEM,OAAOC,OACnB1B,EAAc,GACdR,EAAQmC,KAAK,mBAqB+DC,YAAY,kBAC9ElC,GAAU,qBAAK4B,UAAU,eAAf,SAA8B,cAAC,IAAD,CAAiBO,KAAMC,QAChEpC,IAAWxB,GAAW,cAAC,IAAD,CAAiB6D,QAVhC,WAChBpC,EAAU,IACEqC,SAASC,eAAe,SAC9BP,MAAQ,IAOwDG,KAAMK,MACnEhE,GAAW,qBAAKoD,UAAU,kBAAkBa,IAAKC,a,iCE7ClE,qD,qOCKe,SAASC,EAAT,GAAuD,IAApCC,EAAmC,EAAnCA,KAAMvE,EAA6B,EAA7BA,KAAMwE,EAAuB,EAAvBA,QAC1C,GADiE,EAAdC,WACfvE,sBAApC,6BAEA,IAAKqE,EAAM,OAAO,KAElB,IAAMG,EAAW,uCAAG,sBAAA7D,EAAA,+EAEN8D,YAAiB3E,EAAK4E,UAFhB,OAGZC,OAAOC,SAAP,gBAA2B9E,EAAK4E,UAHpB,+CAKZvD,QAAQC,IAAR,MALY,wDAAH,qDA+BjB,OAAOyD,IAASC,aACZ,qCACI,qBAAKzB,UAAU,eAAeS,QAASQ,IACvC,sBAAKjB,UAAU,YAAf,UACI,qBAAKA,UAAU,mCAAf,kCACA,qBAAIA,UAAU,kBAAd,UACI,uBAAOA,UAAU,iBAAjB,SACI,qBAAIA,UAAU,kBAAd,yBAEI,uBAAO0B,KAAK,OAAOC,MAAO,CAAEC,QAAS,EAAGC,SAAU,WAAYC,KAAM,YAAc5B,SA/BrF,SAACL,GAClB,GAAKA,EAAEM,OAAO4B,MAAMvE,OAApB,CAEA,IAAIwE,EAAS,IAAIC,WAEjBD,EAAOE,cAAcrC,EAAEM,OAAO4B,MAAM,IACpCjE,QAAQC,IAAI8B,EAAEM,OAAO4B,MAAM,IAE3BC,EAAOG,OAAP,sBAAgB,8BAAA7E,EAAA,6DAEN8E,EAAUJ,EAAOnE,OAFX,kBAIiBwE,YAAiB5F,EAAK4E,SAAUe,GAJjD,OAIFE,EAJE,OAKRxE,QAAQC,IAAIuE,GACZhB,OAAOC,SAAP,gBAA2B9E,EAAK4E,UANxB,gDAQRvD,QAAQC,IAAR,MARQ,kEA0BJ,oBAAIiC,UAAU,kBAAkBS,QAASU,EAAzC,0BACA,oBAAInB,UAAU,kBAAkBS,QAASQ,EAAzC,6BAIZP,SAASC,eAAe,UCpDjB,SAAS4B,EAAT,GAAiD,IAAxBvB,EAAuB,EAAvBA,KAAMvE,EAAiB,EAAjBA,KAAMwE,EAAW,EAAXA,QAChD,EAAoCtE,qBAApC,6BAEA,IAAKqE,EAAM,OAAO,KAElBlD,QAAQC,IAAItB,GAgCZ,OAAO+E,IAASC,aACZ,qCACI,qBAAKzB,UAAU,eAAeS,QAASQ,IACvC,sBAAKjB,UAAU,YAAf,UACI,qBAAKA,UAAU,mCAAf,uBACA,qBAAIA,UAAU,kBAAd,UACKvD,EAAK+F,UAAUC,KAAI,SAACC,OASrB,oBAAI1C,UAAU,kBAAkBS,QAASQ,EAAzC,6BAIZP,SAASC,eAAe,UCnDjB,SAASgC,EAAT,GAYX,IAXFC,EAWC,EAXDA,YACAC,EAUC,EAVDA,cACA3B,EASC,EATDA,WACA4B,EAQC,EARDA,YAQC,IAPDC,QACOC,EAMN,EANCtF,IACAuF,EAKD,EALCA,SACAT,EAID,EAJCA,UACAjF,EAGD,EAHCA,UACU2F,EAEX,EAFC7B,SAGY8B,EAAiB7E,qBAAW8E,KAAlC3G,KACAA,EAAS4G,YAAO,OAACF,QAAD,IAACA,OAAD,EAACA,EAAc9B,UAA/B5E,KACR,EAAoDE,mBAAS,MAA7D,mBAAO2G,EAAP,KAA2BC,EAA3B,KACA,EAAkC5G,oBAAS,GAA3C,mBAAO6G,EAAP,KAAkBC,EAAlB,KACA,EAA8C9G,oBAAS,GAAvD,mBAAO+G,EAAP,KAAwBC,EAAxB,KACA,EAAgDhH,oBAAS,GAAzD,mBAAyBiH,GAAzB,WAEMC,GAAsB,OAAJpH,QAAI,IAAJA,OAAA,EAAAA,EAAM4E,YAAgB,OAAJ5E,QAAI,IAAJA,OAAA,EAAAA,EAAM4E,YAAa6B,EAEvDY,EAAkB,uCAAG,sBAAAxG,EAAA,6DACzBiG,GAAsB,SAACD,GAAD,OAAyBA,KAC/CpC,EAAW,CACT2B,cAAeS,EAAqBT,EAAgB,EAAIA,EAAgB,IAHjD,SAKnBkB,YAAaT,EAAoBN,EAAevG,EAAKiB,KALlC,2CAAH,qDAqBxB,OAbAN,qBAAU,YAOA,OAAJX,QAAI,IAAJA,OAAA,EAAAA,EAAM4E,WAAY2B,GANiB,WAErC,IAAMgB,EAAcxB,EAAUyB,QAAO,SAAAC,GAAI,OAAIA,EAAKxG,KAAOjB,EAAKiB,OAC9D6F,IAAwBS,EAAYxG,QAIpC2G,KAED,QAAC1H,QAAD,IAACA,OAAD,EAACA,EAAM4E,SAAU2B,IAIlB,mCACE,sBAAKhD,UAAU,iEAAf,UACE,qBAAKA,UAAU,6CAAf,SACGkD,EACC,qBACEzC,QAAS,kBAAMgD,GAAa,IAC5BzD,UAAU,8BACVoE,IAAG,UAAKnB,EAAL,oBACHpC,IAAKiC,EAAcA,EAAYuB,WAAaC,IAC5CC,QAAS,SAAC1E,GACRA,EAAEM,OAAOU,IAAMyD,OAInB,cAAC,IAAD,CAAUE,QAAM,EAACC,OAAQ,IAAKC,MAAO,IAAKC,MAAO,MAIrD,cAAC5D,EAAD,CAASG,WAAYA,EAAYF,KAAMwC,EAAW/G,KAAMA,EAAMwE,QAAS,kBAAMwC,GAAa,MAE1F,sBAAKzD,UAAU,uDAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,mBAAGA,UAAU,gBAAb,SAA8BkD,IAC7BW,GAA0C,OAAvBP,EAClB,cAAC,IAAD,CAAUqB,MAAO,EAAGD,MAAO,GAAID,OAAQ,KAEvCZ,GACE,wBACE7D,UAAU,+DACV0B,KAAK,SACLjB,QAASqD,EACTc,UAAW,SAACC,GACQ,UAAdA,EAAMC,KACRhB,KANN,SAUGR,EAAqB,WAAa,cAK3C,qBAAKtD,UAAU,sBAAf,SACIwC,GAAcjF,EAGd,qCACE,oBAAGyC,UAAU,QAAb,UACE,sBAAMA,UAAU,YAAhB,SAA6B4C,IAD/B,aAGA,oBAAG5C,UAAU,QAAQS,QAAS,kBAAMkD,GAAmB,IAAvD,UACE,sBAAM3D,UAAU,YAAhB,SAA6B6C,IAD/B,IAGqB,IAAlBA,EAAA,0BAEH,cAACN,EAAD,CAAevB,KAAM0C,EAAiBjH,KAAMA,EAAMwE,QAAS,kBAAM0C,GAAmB,MACpF,oBAAG3D,UAAU,QAAQS,QAAS,kBAAMmD,GAAoB,IAAxD,UACE,sBAAM5D,UAAU,YAAhB,gBAA6BzC,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAWC,SAD1C,mBAZF,cAAC,IAAD,CAAUmH,MAAO,EAAGD,MAAO,IAAKD,OAAQ,OAkB5C,qBAAKzE,UAAU,iBAAf,SACE,mBAAGA,UAAU,cAAb,SAA6BiD,GAAW,cAAC,IAAD,CAAU0B,MAAO,EAAGF,OAAQ,iB,oDCnHjEM,G,OADSC,wBAAc,OCQvB,SAASC,EAAT,GAA8E,IAAzDjE,EAAwD,EAAxDA,KAAMkE,EAAkD,EAAlDA,QAASjE,EAAyC,EAAzCA,QAAqBkE,GAAoB,EAAhCjE,WAAgC,EAApBiE,kBACpE,EAAoCxI,qBAApC,mBACQF,GADR,UACiB6B,qBAAWC,KAApB9B,MACR,EAA4B6B,qBAAWyG,GAA/B/H,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACPmI,EAAaC,cAAbD,SAER,IAAKpE,EAAM,OAAO,KAElB,IAAMsE,EAAQ,uCAAG,sBAAAhI,EAAA,0FAAH,qDAsCd,OAAOkE,IAASC,aACZ,qCACI,qBAAKzB,UAAU,eAAeS,QAASQ,IACvC,qBAAKjB,UAAU,YAAf,SACI,qBAAIA,UAAU,kBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiC,cAAC,IAAD,CAAMG,OAAO,UAAUoF,GAAE,uBAAWL,QAAX,IAAWA,OAAX,EAAWA,EAASM,QAA7C,qBAChCN,EAAQM,QAAU/I,EAAK4E,UAAY,oBAAIrB,UAAU,kCAAkCS,QAAS6E,EAAzD,sBACnCJ,EAAQM,QAAU/I,EAAK4E,UAAY,oBAAKrB,UAAU,kCAAkCS,QA9BlF,WAEXxD,EADY,KAAZmI,EACSpI,EAAMiH,QAAO,SAAAC,GAAI,OAAIA,EAAKxG,KAAOwH,EAAQxH,OAIzC,CAAEyH,iBAAkBA,EAAiBlB,QAAO,SAAAC,GAAI,OAAIA,EAAKxG,KAAOwH,EAAQxH,SACrF+H,YAAeP,EAAQxH,KAAK+B,MAAK,eAG9BG,OAAM,SAAAC,GACL6F,MAAM,gEACN5H,QAAQC,IAAI8B,EAAGqF,GAEXjI,EADY,KAAZmI,EACS,SAAAxH,GAAQ,4BAAQA,GAAR,CAAkBsH,KAI1B,CAAEC,iBAAkBA,EAAiB9E,KAAK6E,SAYX,yBACnCA,EAAQM,QAAU/I,EAAK4E,UAAY,oBAAIrB,UAAU,kCAAkCS,QArC/E,WACjBkF,aAAaC,QAAQ,eAAgBC,KAAKC,UAAU,CAAEC,OAAQb,EAAQxH,IAAK8H,OAAQN,EAAQM,UAC3FvI,EAASD,EAAMiH,QAAO,SAAAC,GAAI,OAAIA,EAAKxG,KAAOwH,EAAQxH,QAClDuD,KAkCgD,oCACpC,oBAAIjB,UAAU,kBAAkBS,QAASQ,EAAzC,4BAIZP,SAASC,eAAe,UC3DjB,SAASgC,EAAT,GAAkF,IAAhEtB,EAA+D,EAA/DA,SAAUgD,EAAqD,EAArDA,WAAYa,EAAyC,EAAzCA,QAAShE,EAAgC,EAAhCA,WAAYiE,EAAoB,EAApBA,iBAC1E,EAA4BxI,oBAAS,GAArC,mBAAOqJ,EAAP,KAAgBC,EAAhB,KAEA,OACE,sBAAKjG,UAAU,eAAf,UAEE,eAAC,IAAD,CAAMuF,GAAE,gBAAWlE,GAAYrB,UAAU,oBAAzC,UACE,qBACEA,UAAU,oBACVa,IAAKwD,GAA0BC,IAC/BF,IAAG,UAAK/C,EAAL,sBAEL,mBAAGrB,UAAU,YAAb,SAA0BqB,OAE5B,qBAAKZ,QAAS,kBAAMwF,GAAS,IAA7B,SAAoC,cAAC,IAAD,CAAiB1F,KAAM2F,QAC3D,cAACjB,EAAD,CAAWC,QAASA,EAASlE,KAAMgF,EAAS/E,QAAS,kBAAMgF,GAAS,IAAQ/E,WAAYA,EAAYiE,iBAAkBA,OCpB7G,SAASgB,EAAT,GAAoC,IAAnBpE,EAAkB,EAAlBA,MAAOqE,EAAW,EAAXA,QACrC,EAA8BzJ,mBAAS,GAAvC,mBAAO0J,EAAP,KAAgBC,EAAhB,KAUA,OACE,qBAAKtG,UAAU,eAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKa,IAAKkB,EAAMsE,GAAUjC,IAAKgC,IAC/B,mCACGC,EAAWtE,EAAMvE,OAAS,GAEvB,wBAAQwC,UAAU,0CAA0CS,QAhBvD,WACf,GAAI4F,GAAWtE,EAAMvE,OAAS,EAAG,OAAO,KACxC8I,EAAWD,EAAU,IAcX,SACE,cAAC,IAAD,CAAiB9F,KAAMgG,UAIlB,IAAZF,GAAiB,wBAAQrG,UAAU,0CAA0CS,QAjBnE,WACf,GAAe,GAAX4F,EAAc,OAAO,KACzBC,EAAWD,EAAU,IAeC,SAChB,cAAC,IAAD,CAAiB9F,KAAMiG,aC1BlB,SAASC,EAAT,GAAwC,IAAtBL,EAAqB,EAArBA,QAAS/E,EAAY,EAAZA,SACxC,EAA4B1E,mBAAS,IAArC,mBAAO+J,EAAP,KAAeC,EAAf,KAIA,OAHAvJ,qBAAU,WACRuJ,EAAUP,EAAQQ,QAAQ,KAAM,SAC/B,CAACR,IAEF,sBAAKpG,UAAU,eAAf,UACE,sBAAMA,UAAU,qBAAhB,SAAsCqB,IACtC,sBAAMrB,UAAU,wBAAhB,SAAyC0G,O,OCAhC,SAASG,EAAT,GAAuC,IAAnB7F,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,QACrC,EAAoCtE,qBAApC,mBACQF,GADR,UACiB6B,qBAAWC,KAApB9B,MACR,EAA4B6B,qBAAWyG,GAAvC,EAAQ/H,MAAR,EAAeC,SACMoI,cAAbD,SAER,OAAKpE,EAIEQ,IAASC,aACZ,qCACI,qBAAKzB,UAAU,eAAeS,QAASQ,IACvC,qBAAKjB,UAAU,YAAf,SACI,qBAAIA,UAAU,kBAAd,UACI,qBAAKA,UAAU,eAAf,SACI,eAAC,IAAD,CAAMuF,GAAE,gBAAW9I,EAAK4E,UAAYrB,UAAU,oBAA9C,UACI,qBACIA,UAAU,oBACVa,KAAS,OAAJpE,QAAI,IAAJA,OAAA,EAAAA,EAAMqK,YAAarK,EAAKqK,WAAWzC,WAAaC,IACrDF,IAAG,UAAK3H,EAAK4E,SAAV,sBAEP,mBAAGrB,UAAU,YAAb,SAA0BvD,EAAK4E,gBAGvC,oBAAIrB,UAAU,kCAAd,SACI,wBAAQA,UAAU,gBAAlB,mBAEJ,oBAAIA,UAAU,kBAAkBS,QAASQ,EAAzC,4BAIZP,SAASC,eAAe,UA1BV,KCLP,SAASoG,EAAT,GAAmE,IAAnD7B,EAAkD,EAAlDA,QAAS8B,EAAyC,EAAzCA,QAAS9F,EAAgC,EAAhCA,WAAYiE,EAAoB,EAApBA,iBAE3D,GADqB8B,iBAAO,MACQtK,sBAApC,mBAAO0H,EAAP,KAAmB6C,EAAnB,KACA,EAAgCvK,qBAAhC,mBAAOwK,EAAP,KAAiBC,EAAjB,KAGA,EAAyClC,EAAQvH,KAAzCoE,EAAR,EAAQA,MAAOqE,EAAf,EAAeA,QAASZ,EAAxB,EAAwBA,OAAQ6B,EAAhC,EAAgCA,KAEhCjK,oBAAS,sBAAC,8BAAAE,EAAA,sEACqBgK,YAAmB9B,GADxC,gBACAsB,EADA,EACAA,WACRI,EAAcJ,EAAWzC,YAFjB,2CAGP,IAUH,OACE,sBAAKkD,IAAKP,EAAShH,UAAU,OAA7B,UACE,cAAC,EAAD,CAAQkF,QAASA,EAAQvH,KAAM0D,SAAUmE,EAAQnB,WAAYA,EAAYnD,WAAYA,EAAYiE,iBAAkBA,IACjHD,EAAQvH,KAAK0J,KAAKG,OAGlBtC,EAAQuC,QACN,cAACtB,EAAD,CAAOpE,MAAOA,EAAOqE,QAASZ,IAE9B,sBAAKxF,UAAU,WAAf,UACE,cAAC,IAAD,CAAiBA,UAAU,iBAAiBO,KAAMmH,MAClD,yBAAQjH,QAnBA,WAChB2G,GAAY,IAkBwBpH,UAAU,gCAAtC,iBAA2EqH,EAAKM,MAAhF,0BACA,cAACd,EAAD,CAAU5F,QAAS,kBAAMmG,GAAY,IAAQpG,KAAMmG,OARvD,cAAChB,EAAD,CAAOpE,MAAOA,EAAOqE,QAASZ,IAqBhC,cAACiB,EAAD,CAAQL,QAASA,EAAS/E,SAAUmE,OC9C3B,SAASoC,EAAT,GAA4B,IAATnL,EAAQ,EAARA,KAChC,EAAoCE,mBAAS,GAA7C,mBAAOD,EAAP,KAAmBgC,EAAnB,KACcmJ,EAAevJ,qBAAWC,KAAhC9B,KACR,ECZa,SAAwBA,EAAMqL,EAAcpL,GACvD,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA2BN,oBAAS,GAApC,mBAAOO,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,oBAAS,sBAAC,iBAGS2K,EAHT,WAAAzK,EAAA,0FAAAA,EAAA,MAGN,4BAAAA,EAAA,+EAG2B0K,YAAwBvL,EAAK4E,SAAUyG,EAAcpL,EAAY,GAH5F,OAGciB,EAHd,OAIQG,QAAQC,IAAIJ,GACZV,GAAS,SAAAW,GAAc,MAAM,GAAN,mBAAWA,GAAX,YAAwBD,EAAKE,YACpDV,EAAQQ,EAAKE,OAAOL,OAAS,GAC7BX,GAAW,GAPnB,kDASQE,GAAS,GACTe,QAAQC,IAAR,MAVR,2DAHM,uBAGSgK,EAHT,2CACNlL,GAAW,GACXE,GAAS,GAeTgL,IAjBM,2CAkBP,CAACtL,EAAMC,EAAYoL,IACf,CAAE9K,QAAOJ,UAASE,QAAOI,UAASD,YDbUgL,CAAexL,EAAD,OAAOoL,QAAP,IAAOA,OAAP,EAAOA,EAAYnK,IAAKhB,GAAnFM,EAAR,EAAQA,MAAOJ,EAAf,EAAeA,QAASM,EAAxB,EAAwBA,QAGlBgL,GAHN,EAAiCpL,MAAjC,EAAwCG,SAGvBgK,oBACXkB,EAAcC,uBAAY,SAAAC,GAC1BzL,IACAsL,EAASI,SAASJ,EAASI,QAAQC,aACvCL,EAASI,QAAU,IAAIE,sBAAqB,SAAAC,GACtCA,EAAQ,GAAGC,gBAAkBxL,GAC/BwB,GAAc,SAAAiK,GAAO,OAAIA,EAAU,QAGnCN,GAAMH,EAASI,QAAQM,QAAQP,MAClC,CAACzL,EAASM,IAQb,EAA8E2L,sBApB9D,SAACC,EAAOC,GAAR,mBAAC,eAA0BD,GAAUC,KAchC,CACnBhG,QAAS,GACToC,iBAAkB,KAClBtC,cAAe,EACfC,YAAa,KAEf,0BAASC,EAAT,EAASA,QAASoC,EAAlB,EAAkBA,iBAAkBtC,EAApC,EAAoCA,cAAeC,EAAnD,EAAmDA,YAAekG,EAAlE,KAcA,OATA5L,qBAAU,WAAM,4CACd,8BAAAE,EAAA,6DACEQ,QAAQC,IAAIf,GADd,SAE+BsK,YAAmB7K,EAAK4E,UAFvD,gBAEUyF,EAFV,EAEUA,WACRkC,EAAS,CAAEjG,QAAStG,EAAM0I,iBAAkBnI,EAAO6F,cAAepG,EAAK+F,UAAUhF,OAAQsF,YAAagE,IAHxG,4CADc,uBAAC,WAAD,wBAMdmC,KACC,CAACxM,EAAMC,EAAYmL,IACtB/J,QAAQC,IAAIf,EAAOmI,GAEjB,mCACE,eAAC,EAAgB+D,SAAjB,CAA0B9I,MAAO,CAAE3D,OAAMO,MAAOA,EAAOC,SAAU+L,GAAjE,UACE,cAACrG,EAAD,CACEC,YAAauC,EAAmBA,EAAiB3H,OAAS,EAC1DuF,QAASA,EACTF,cAAeA,EACfC,YAAaA,EACb5B,WAAY8H,IAEZhM,EAGA,qCACGA,EAAMQ,OACJR,EAAMyF,KAAI,SAACyC,EAASiE,GACnB,OAAInM,EAAMQ,SAAW2L,EAAQ,EACpB,cAACpC,EAAD,CAAMC,QAASmB,EAAqCjD,QAASA,GAA7D,OAAiCA,QAAjC,IAAiCA,OAAjC,EAAiCA,EAASvH,KAAKD,KAG/C,cAACqJ,EAAD,CAA8B7B,QAASA,EAASb,WAAYvB,EAAYuB,YAAxE,OAAWa,QAAX,IAAWA,OAAX,EAAWA,EAASvH,KAAKD,QAKlC,sBAAKsC,UAAU,SAAf,UACE,qBAAKA,UAAU,yBAAf,qBACA,sBAAKA,UAAU,YAAf,UAA2B,mBAAGoJ,KAAMC,IAAT,wBAA3B,iBAdR,OAFA,cAAC,IAAD,CAAU1E,MAAO,EAAGD,MAAO,IAAKD,OAAQ,IAAKzE,UAAU,cEtDlD,SAAS4H,IACtB,IAAQvG,EAAaiI,cAAbjI,SACR,EAAwB1E,mBAAS,MAAjC,mBAAOF,EAAP,KAAa8M,EAAb,KACMrL,EAAUC,cAkBhB,OAhBAf,qBAAU,WAAM,4CAEd,gCAAAE,EAAA,sEACqBkM,YAAkBnI,GADvC,cACQ5E,EADR,gBAE0BgN,YAAkBpI,GAF5C,cAEQmB,EAFR,gBAG0BkH,YAAkBrI,GAH5C,OAGQ9D,EAHR,QAIE,OAAId,QAAJ,IAAIA,OAAJ,EAAIA,EAAMiB,KACR6L,EAAQ,2BAAK9M,GAAN,IAAY+F,UAAWA,EAAWjF,UAAWA,KAGpDW,EAAQmC,KAAKsJ,KARjB,6CAFc,uBAAC,WAAD,wBAadC,KACC,CAACvI,EAAUnD,KAEH,OAAJzB,QAAI,IAAJA,OAAA,EAAAA,EAAM4E,UACX,qBAAKrB,UAAU,qBAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,cAAC,EAAD,CAAavD,KAAMA,QAGrB,O,yaC/BAoC,EAAcC,IAAS,QAEhB+K,EAAc,uCAAG,WAAO9H,EAAO+H,EAAO1D,EAAS/E,EAAUgG,EAAMM,EAAOoC,GAArD,iBAAAzM,EAAA,+EAEC0B,IAAMrB,KAAN,UAAckB,EAAd,YAA6BwC,GAChD,CAAEU,QAAO+H,QAAO1D,UAASiB,OAAMM,SAASoC,GAHtB,uBAEdpK,EAFc,EAEdA,KAFc,kBAIf,CAAEA,SAJa,sCAMhB,IAAIqK,MAAM,KAAIC,SAAStK,KAAK7C,OANZ,yDAAH,kEAmBdoN,EAAyB,uCAAG,WAAO7I,EAAUyG,EAAcpL,EAAY2C,GAA3C,eAAA/B,EAAA,+EAEV0B,IAAMmL,IAAN,UAAatL,EAAb,0BAA0CwC,GAC7D,CACIlC,OAAQ,CAAEC,KAAM1C,EAAY2C,MAAOA,EAAOyI,aAAcA,KAJ/B,cAE3BmC,EAF2B,yBAM1BA,EAAStK,MANiB,wHAAH,4DAWzByK,EAAkB,uCAAG,WAAON,GAAP,eAAAxM,EAAA,+EAEH0B,IAAMmL,IAAN,UAAatL,EAAb,kBAAkCiL,IAF/B,cAEpBG,EAFoB,yBAInBA,EAAStK,MAJU,wHAAH,sDAUlB0K,EAAe,uCAAG,WAAOC,EAAYtM,EAAQqD,EAAUmE,GAArC,eAAAlI,EAAA,+EAEA0B,IAAMrB,KAAN,UAAckB,EAAd,yBAA0CyL,GAC7D,CACIjJ,WAAUmE,SAAQxH,WAJH,cAEjBiM,EAFiB,yBAMhBA,EAAStK,MANO,wHAAH,4DAYf4K,EAA2B,uCAAG,WAAOvM,GAAP,eAAAV,EAAA,+EAEZ0B,IAAMmL,IAAN,UAAatL,EAAb,8BAA8Cb,IAFlC,cAE7BiM,EAF6B,yBAG5BA,EAAStK,MAHmB,wHAAH,sDAS3BqI,EAAuB,uCAAG,WAAO3G,EAAUyG,EAAcpL,EAAY2C,GAA3C,eAAA/B,EAAA,+EAER0B,IAAMmL,IAAN,UAAatL,EAAb,uBAAuCwC,GAC1D,CACIlC,OAAQ,CAAEC,KAAM1C,EAAY2C,MAAOA,EAAOyI,aAAcA,KAJjC,cAEzBmC,EAFyB,yBAMxBA,EAAStK,MANe,wHAAH,4DAYvB6K,EAAS,uCAAG,WAAOC,EAASzM,EAAQsM,GAAxB,eAAAhN,EAAA,+EAEM0B,IAAMrB,KAAN,UAAckB,EAAd,uBAAwCyL,GAC3D,CAAEG,UAASzM,WAHE,cAEXiM,EAFW,yBAKVA,EAAStK,MALC,wHAAH,0DAWT+K,EAAqB,uCAAG,WAAOJ,GAAP,eAAAhN,EAAA,+EAEN0B,IAAMmL,IAAN,UAAatL,EAAb,uBAAuCyL,IAFjC,cAEvBL,EAFuB,yBAGtBA,EAAStK,MAHa,wHAAH,sDAkBrBlC,EAAO,uCAAG,WAAOO,EAAQoB,EAAMC,GAArB,eAAA/B,EAAA,+EAEQ0B,IAAMmL,IAAN,UAAatL,EAAb,sBAAsCb,GAAU,CACnEmB,OAAQ,CAAEC,KAAMA,EAAMC,MAAOA,KAHlB,cAET4K,EAFS,yBAKRA,EAAStK,MALD,sCAOT,IAAIqK,MAAM,KAAIC,SAAStK,KAAK7C,OAPnB,yDAAH,0DAWP2I,EAAc,uCAAG,WAAOM,GAAP,eAAAzI,EAAA,+EAEC0B,IAAM2L,OAAN,UAAgB9L,EAAhB,mBAAsCkH,IAFvC,cAEhBkE,EAFgB,yBAGfA,EAAStK,MAHM,yDAKf,KAAIsK,SAAStK,KAAK7C,OALH,yDAAH,uD,mUClHrB+B,G,MAAcC,IAAS,SAGhB0K,EAAiB,uCAAG,WAAOoB,GAAP,iBAAAtN,EAAA,+EAEF0B,IAAMmL,IAAN,UAAatL,EAAb,qBAAqC+L,IAFnC,cAEnBX,EAFmB,yBAGlBA,EAAStK,MAHS,gCAKzB7B,QAAQC,IAAR,UAAY,KAAIkM,gBAAhB,aAAY,EAActK,KAAK7C,OALN,yDAAH,sDAqBjBuF,EAAgB,uCAAG,WAAOhB,EAAUgD,GAAjB,iBAAA/G,EAAA,+EAED0B,IAAM6L,IAAN,UAAahM,EAAb,wBAAwCwC,GAC3D,CAAEgD,eAHkB,cAElB4F,EAFkB,yBAKjBA,EAAStK,MALQ,gCAOxB7B,QAAQC,IAAR,UAAY,KAAIkM,gBAAhB,aAAY,EAActK,KAAK7C,OAPP,yDAAH,wDAWhBsE,EAAgB,uCAAG,WAAOC,EAAUgD,GAAjB,iBAAA/G,EAAA,+EAED0B,IAAM2L,OAAN,UAAgB9L,EAAhB,wBAA2CwC,IAF1C,cAElB4I,EAFkB,yBAGjBA,EAAStK,MAHQ,gCAKxB7B,QAAQC,IAAR,UAAY,KAAIkM,gBAAhB,aAAY,EAActK,KAAK7C,OALP,yDAAH,wDAShBwK,EAAkB,uCAAG,WAAOjG,GAAP,iBAAA/D,EAAA,+EAEH0B,IAAMmL,IAAN,UAAatL,EAAb,yBAAyCwC,IAFtC,cAEpB4I,EAFoB,yBAGnBA,EAAStK,MAHU,gCAK1B7B,QAAQC,IAAR,UAAY,KAAIkM,gBAAhB,aAAY,EAActK,KAAK7C,OALL,yDAAH,sDASlB4M,EAAiB,uCAAG,WAAOkB,GAAP,iBAAAtN,EAAA,+EAEF0B,IAAMmL,IAAN,UAAatL,EAAb,+BAA+C+L,IAF7C,cAEnBX,EAFmB,yBAGlBA,EAAStK,MAHS,gCAKzB7B,QAAQC,IAAR,UAAY,KAAIkM,gBAAhB,aAAY,EAActK,KAAK7C,OALN,yDAAH,sDASjB2M,EAAiB,uCAAG,WAAOmB,GAAP,iBAAAtN,EAAA,+EAEF0B,IAAMmL,IAAN,UAAatL,EAAb,+BAA+C+L,IAF7C,cAEnBX,EAFmB,yBAGlBA,EAAStK,MAHS,gCAKzB7B,QAAQC,IAAR,UAAY,KAAIkM,gBAAhB,aAAY,EAActK,KAAK7C,OALN,yDAAH,sDASjBiH,EAAY,uCAAG,WAAOT,EAC/BN,EACA8H,GAFwB,SAAAxN,EAAA,0DAGpBgG,EAHoB,uBAIpBxF,QAAQC,IAAI,cAJQ,SAOdiB,IAAM6L,IAAN,UAAahM,EAAb,qBAAqCmE,GAAiB,CACxD8H,oBARgB,oCAYpBhN,QAAQC,IAAI,UAZQ,SAediB,IAAM6L,IAAN,UAAahM,EAAb,mBAAmCmE,GAAiB,CACtD8H,oBAhBgB,2CAAH,2D,gCC3EzB,WAEMvM,EAAsByG,wBAAc,MAC3BzG,O,gCCHf,oEAAO,IAAM+F,EAAqB,8BACrBxD,EAAmB,gB,6HCEjB,SAASuC,EAAQhC,GAC9B,MAAoC1E,qBAApC,mBAAOoO,EAAP,KAAmBC,EAAnB,KAiBA,OAfA5N,qBAAU,WAAM,4CACd,WAAkCiE,GAAlC,uBAAA/D,EAAA,sEACqBkM,YAAkBnI,GADvC,cACQ5E,EADR,gBAE0BgN,YAAkBpI,GAF5C,cAEQmB,EAFR,gBAG0BkH,YAAkBrI,GAH5C,cAGQ9D,EAHR,iBAI+B+J,YAAmBjG,GAJlD,iBAIUyF,EAJV,EAIUA,WACRhJ,QAAQC,IAAI+I,GACZkE,EAAc,2BAAKvO,GAAL,IAAW+F,UAAWA,EAAWjF,UAAWA,EAAWuJ,WAAYA,KAAgB,IANnG,6CADc,sBAUVzF,GAVW,SAAD,2BAWZ4J,CAAmB5J,KAEpB,CAACA,IACJvD,QAAQC,IAAIgN,GACL,CAAEtO,KAAMsO,EAAYC","file":"static/js/6.3d5ba526.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { getPost, retrivePostByUserId } from '../services/postServices';\n\nexport default function usePhotos(user, pageNumber) {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  const [posts, setPosts] = useState([]);\n  const [hasMore, setMore] = useState(false)\n\n  useEffect(async () => {\n    setLoading(true)\n    setError(false)\n    async function getTimelinePhotos() {\n\n      if (user?.following?.length > 0) {\n        try {\n          const post = await getPost(user._id, pageNumber, 5);\n          setPosts(prevPost => { return [...prevPost, ...post.result] });\n          setMore(post.result.length > 0)\n          setLoading(false)\n        } catch (error) {\n          setError(true)\n          console.log(error);\n        }\n      }\n    }\n\n    getTimelinePhotos();\n  }, [user?.userId, user?.following, pageNumber]);\n\n  return { posts, loading, error, hasMore, setPosts };\n}\n","import { faCircle, faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DEFAULT_IMAGE_PATH, LOADING_ANI_PATH } from '../../constants/paths';\r\nimport useSearch from '../../hooks/use-search';\r\nimport LoadingAni from '../loadingAni';\r\nimport { Link } from 'react-router-dom';\r\nimport LoggedInUserContext from '../../context/logged-in-user';\r\n\r\nexport default function SearchBar() {\r\n    let history = useHistory();\r\n    const [search, setSearch] = useState()\r\n    const { searchResult, setSearchResult } = useContext(LoggedInUserContext);\r\n    // const [searchResult, setSearchResult] = useState([])\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n\r\n    const handleSearch = (e) => {\r\n        // e.preventDefault() \r\n        setSearch(e.target.value)\r\n        setPageNumber(1)\r\n        history.push(\"/search-result\");\r\n    }\r\n\r\n    const { result, hasMore, loading, error } = useSearch(search, pageNumber)\r\n\r\n    useEffect(() => {\r\n        if (!loading)\r\n            setSearchResult(result)\r\n        if (!search)\r\n            setSearchResult([])\r\n    }, [result, loading])\r\n\r\n\r\n    const handleClear = () => {\r\n        setSearch(\"\")\r\n        let input = document.getElementById('input')\r\n        input.value = \"\"\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"search-box\">\r\n                <input id=\"input\" className=\"search__input\" onChange={handleSearch} placeholder=\"Search Users\" />\r\n                {!search && <div className=\"search__icon\"><FontAwesomeIcon icon={faSearch} /></div>}\r\n                {search && !loading && <FontAwesomeIcon onClick={handleClear} icon={faTimes} />}\r\n                {loading && <img className=\"search__loading\" src={LOADING_ANI_PATH} />}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport default function useSearch(query, pageNumber) {\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n    const [result, setResult] = useState([]);\r\n    const [hasMore, setMore] = useState(false)\r\n    const apiEndpoint = apiUrl + \"/post\";\r\n\r\n    useEffect(() => {\r\n        setResult([])\r\n    }, [query])\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setError(false)\r\n        let cancel;\r\n        axios({\r\n            method: 'GET',\r\n            url: `${apiEndpoint}/search/${query}`,\r\n            params: { page: pageNumber, limit: 5 },\r\n            cancelToken: new axios.CancelToken(c => cancel = c)\r\n        }).then((res) => {\r\n            console.log(res);\r\n            setMore(res.data.length > 0)\r\n            setLoading(false)\r\n            setResult(res.data)\r\n        }).catch(e => {\r\n            if (axios.isCancel(e)) return\r\n            setError(true)\r\n            setLoading(false)\r\n            console.log(e);\r\n        })\r\n        return () => cancel()\r\n    }, [query, pageNumber]);\r\n\r\n    return { result, loading, error, hasMore };\r\n}\r\n","import { useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport UserContext from '../context/user';\nimport * as ROUTES from '../constants/routes';\nimport { DEFAULT_IMAGE_PATH } from '../constants/paths';\nimport useUser from '../hooks/use-user';\nimport SearchBar from './leftbar/searchBar';\n\nexport default function Header() {\n  const { user: loggedInUser } = useContext(UserContext);\n  const { user } = useUser(loggedInUser?.uid);\n  const history = useHistory();\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__logo\">\n        <h1 className=\"flex justify-center w-full\">\n          <Link to={ROUTES.DASHBOARD} aria-label=\" logo\" className=\"heading-logo\">\n            BookShell\n          </Link>\n        </h1>\n      </div>\n\n      {/* <SearchBar /> */}\n\n      <div className=\"header__input\">\n        {loggedInUser ? (\n          <>\n            <Link to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\n              <svg\n                className=\"w-8 mr-6 text-black-light cursor-pointer\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n                />\n              </svg>\n            </Link>\n\n            <button\n              type=\"button\"\n              title=\"Sign Out\"\n              onClick={() => {\n                // firebase.auth().signOut();\n                history.push(ROUTES.LOGIN);\n              }}\n              onKeyDown={(event) => {\n                if (event.key === 'Enter') {\n                  // firebase.auth().signOut();\n                  history.push(ROUTES.LOGIN);\n                }\n              }}\n            >\n              <svg\n                className=\"w-8 mr-6 text-black-light cursor-pointer\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                />\n              </svg>\n            </button>\n            {user && (\n              <div className=\"flex items-center cursor-pointer\">\n                <Link to={`/p/${user?.username}`}>\n                  <img\n                    className=\"rounded-full h-8 w-8 flex\"\n                    src={`/images/avatars/${user?.username}.jpg`}\n                    alt={`${user?.username} profile`}\n                    onError={(e) => {\n                      e.target.src = DEFAULT_IMAGE_PATH;\n                    }}\n                  />\n                </Link>\n              </div>\n            )}\n          </>\n        ) : (\n          <>\n            <Link to={ROUTES.LOGIN}>\n              <button\n                type=\"button\"\n                className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\"\n              >\n                Log In\n              </button>\n            </Link>\n            <Link to={ROUTES.SIGN_UP}>\n              <button\n                type=\"button\"\n                className=\"font-bold text-sm rounded text-blue-medium w-20 h-8\"\n              >\n                Sign Up\n              </button>\n            </Link>\n          </>\n        )}\n      </div>\n    </header>\n  );\n}\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { updateProfileImg, removeProfileImg } from '../../services/userServices'\r\n\r\nexport default function PIModal({ open, user, onClose, setProfile }) {\r\n    const [profileImg, setProfileImg] = useState()\r\n\r\n    if (!open) return null\r\n\r\n    const removeImage = async () => {\r\n        try {\r\n            await removeProfileImg(user.username)\r\n            window.location = `/user/${user.username}`\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        if (!e.target.files.length) return;\r\n\r\n        let reader = new FileReader();\r\n        // Convert the file to base64 text\r\n        reader.readAsDataURL(e.target.files[0]);\r\n        console.log(e.target.files[0]);\r\n        // on reader load somthing...\r\n        reader.onload = async () => {\r\n            // Make a fileInfo Object\r\n            const baseURL = reader.result;\r\n            try {\r\n                const updatedImg = await updateProfileImg(user.username, baseURL)\r\n                console.log(updatedImg);\r\n                window.location = `/user/${user.username}`\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return ReactDom.createPortal(\r\n        <>\r\n            <div className=\"modal-layout\" onClick={onClose}></div>\r\n            <div className=\"modal-box\">\r\n                <div className=\"modal-box__heading heading-black\">Change Profile Photo</div>\r\n                <ul className=\"modal-box__list\">\r\n                    <label className=\"newpost__media\">\r\n                        <li className=\"modal-box__item\">\r\n                            Upload Image\r\n                            <input type=\"file\" style={{ opacity: 0, position: \"absolute\", left: \"-99999px\" }} onChange={handleSubmit} />\r\n                        </li>\r\n                    </label>\r\n                    <li className=\"modal-box__item\" onClick={removeImage} >Remove Image</li>\r\n                    <li className=\"modal-box__item\" onClick={onClose}>Cencel</li>\r\n                </ul>\r\n            </div>\r\n        </>,\r\n        document.getElementById(\"modal\")\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport UserContext from '../../context/user'\r\nimport { updateProfileImg, removeProfileImg } from '../../services/userServices'\r\n\r\nexport default function FollowerModal({ open, user, onClose }) {\r\n    const [profileImg, setProfileImg] = useState()\r\n\r\n    if (!open) return null\r\n\r\n    console.log(user);\r\n    const removeImage = async () => {\r\n        try {\r\n            await removeProfileImg(user.username)\r\n            window.location = `/user/${user.username}`\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        if (!e.target.files.length) return;\r\n\r\n        let reader = new FileReader();\r\n        // Convert the file to base64 text\r\n        reader.readAsDataURL(e.target.files[0]);\r\n        console.log(e.target.files[0]);\r\n        // on reader load somthing...\r\n        reader.onload = async () => {\r\n            // Make a fileInfo Object\r\n            const baseURL = reader.result;\r\n            try {\r\n                const updatedImg = await updateProfileImg(user.username, baseURL)\r\n                console.log(updatedImg);\r\n                window.location = `/user/${user.username}`\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return ReactDom.createPortal(\r\n        <>\r\n            <div className=\"modal-layout\" onClick={onClose}></div>\r\n            <div className=\"modal-box\">\r\n                <div className=\"modal-box__heading heading-black\">Followers</div>\r\n                <ul className=\"modal-box__list\">\r\n                    {user.followers.map((follower) => {\r\n                        <label className=\"newpost__media\">\r\n                            <li className=\"modal-box__item\">\r\n                                {follower}\r\n                                <input type=\"file\" style={{ opacity: 0, position: \"absolute\", left: \"-99999px\" }} onChange={handleSubmit} />\r\n                            </li>\r\n                        </label>\r\n                    })}\r\n\r\n                    <li className=\"modal-box__item\" onClick={onClose}>Cencel</li>\r\n                </ul>\r\n            </div>\r\n        </>,\r\n        document.getElementById(\"modal\")\r\n    )\r\n}\r\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from 'react-loading-skeleton';\nimport useUser from '../../hooks/use-user';\nimport { toggleFollow } from '../../services/userServices';\nimport UserContext from '../../context/user';\nimport { DEFAULT_IMAGE_PATH } from '../../constants/paths';\nimport PIModal from './pimodal'\nimport FollowerModal from './followerModal';\n\nexport default function Header({\n  photosCount,\n  followerCount,\n  setProfile,\n  displayImgs,\n  profile: {\n    _id: profileUserId,\n    fullName,\n    followers,\n    following,\n    username: profileUsername\n  }\n}) {\n  const { user: loggedInUser } = useContext(UserContext);\n  const { user } = useUser(loggedInUser?.username);\n  const [isFollowingProfile, setIsFollowingProfile] = useState(null);\n  const [ispiModal, setIspiModal] = useState(false)\n  const [isfollowerModal, setIsfollowerModal] = useState(false)\n  const [isfollowingModal, setIsfollowingModal] = useState(false)\n  // const [profileImg, setProfileImg] = useState();\n  const activeBtnFollow = user?.username && user?.username !== profileUsername;\n\n  const handleToggleFollow = async () => {\n    setIsFollowingProfile((isFollowingProfile) => !isFollowingProfile);\n    setProfile({\n      followerCount: isFollowingProfile ? followerCount - 1 : followerCount + 1\n    });\n    await toggleFollow(isFollowingProfile, profileUserId, user._id);\n  };\n\n  useEffect(() => {\n    const isLoggedInUserFollowingProfile = () => {\n      // const isFollowing = await isUserFollowingProfile(user.username, profileUserId);\n      const isFollowing = followers.filter(item => item._id == user._id)\n      setIsFollowingProfile(!!isFollowing.length);\n    };\n\n    if (user?.username && profileUserId) {\n      isLoggedInUserFollowingProfile();\n    }\n  }, [user?.username, profileUserId]);\n\n\n  return (\n    <>\n      <div className=\"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg\">\n        <div className=\"container flex justify-center items-center\">\n          {profileUsername ? (\n            <img\n              onClick={() => setIspiModal(true)}\n              className=\"rounded-full h-40 w-40 flex\"\n              alt={`${fullName} profile picture`}\n              src={displayImgs ? displayImgs.profileImg : DEFAULT_IMAGE_PATH}\n              onError={(e) => {\n                e.target.src = DEFAULT_IMAGE_PATH;\n              }}\n            />\n          ) : (\n            <Skeleton circle height={150} width={150} count={1} />\n          )}\n        </div>\n\n        <PIModal setProfile={setProfile} open={ispiModal} user={user} onClose={() => setIspiModal(false)} />\n\n        <div className=\"flex items-center justify-center flex-col col-span-2\">\n          <div className=\"container flex items-center\">\n            <p className=\"text-2xl mr-4\">{profileUsername}</p>\n            {activeBtnFollow && isFollowingProfile === null ? (\n              <Skeleton count={1} width={60} height={32} />\n            ) : (\n              activeBtnFollow && (\n                <button\n                  className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\"\n                  type=\"button\"\n                  onClick={handleToggleFollow}\n                  onKeyDown={(event) => {\n                    if (event.key === 'Enter') {\n                      handleToggleFollow();\n                    }\n                  }}\n                >\n                  {isFollowingProfile ? 'Unfollow' : 'Follow'}\n                </button>\n              )\n            )}\n          </div>\n          <div className=\"container flex mt-4\">\n            {!followers || !following ? (\n              <Skeleton count={1} width={500} height={24} />\n            ) : (\n              <>\n                <p className=\"mr-10\">\n                  <span className=\"font-bold\">{photosCount}</span> photos\n                </p>\n                <p className=\"mr-10\" onClick={() => setIsfollowerModal(true)}>\n                  <span className=\"font-bold\">{followerCount}</span>\n                  {` `}\n                  {followerCount === 1 ? `follower` : `followers`}\n                </p>\n                <FollowerModal open={isfollowerModal} user={user} onClose={() => setIsfollowerModal(false)} />\n                <p className=\"mr-10\" onClick={() => setIsfollowingModal(true)}>\n                  <span className=\"font-bold\">{following?.length}</span> following\n                </p>\n              </>\n            )}\n          </div>\n          <div className=\"container mt-4\">\n            <p className=\"font-medium\">{!fullName ? <Skeleton count={1} height={24} /> : fullName}</p>\n          </div>\n        </div>\n      </div>\n\n    </>\n  );\n}\n\nHeader.propTypes = {\n  photosCount: PropTypes.number.isRequired,\n  followerCount: PropTypes.number.isRequired,\n  setProfile: PropTypes.func.isRequired,\n  profile: PropTypes.shape({\n    docId: PropTypes.string,\n    userId: PropTypes.string,\n    fullName: PropTypes.string,\n    username: PropTypes.string,\n    followers: PropTypes.array,\n    following: PropTypes.array\n  }).isRequired\n};\n","import { createContext } from 'react';\r\n\r\nconst TimeLineContext = createContext(null);\r\nexport default TimeLineContext;\r\n","import React, { useContext } from 'react'\r\nimport { useState } from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport LoggedInUserContext from '../../context/logged-in-user'\r\nimport { deletePostById } from '../../services/postServices'\r\nimport usePhotos from '../../hooks/use-photos'\r\nimport { DASHBOARD } from '../../constants/routes'\r\nimport TimeLineContext from '../../context/timeline'\r\n\r\nexport default function PostModal({ open, content, onClose, setProfile, photosCollection }) {\r\n    const [profileImg, setProfileImg] = useState()\r\n    const { user } = useContext(LoggedInUserContext)\r\n    const { posts, setPosts } = useContext(TimeLineContext)\r\n    const { pathname } = useLocation()\r\n\r\n    if (!open) return null\r\n\r\n    const unfollow = async () => {\r\n        // try {\r\n        //     await toggleFollow(true, content.author, user._id)\r\n        //     window.location = `/user/${user.username}`\r\n        // } catch (error) {\r\n        //     console.log(error);\r\n        // }\r\n    }\r\n\r\n    const notLikedPost = () => {\r\n        localStorage.setItem(\"dontLikePost\", JSON.stringify({ postId: content._id, author: content.author }))\r\n        setPosts(posts.filter(item => item._id != content._id))\r\n        onClose()\r\n    }\r\n\r\n    const deletePost = () => {\r\n        if (pathname == \"/\") {\r\n            setPosts(posts.filter(item => item._id != content._id))\r\n            // window.location = pathname\r\n        }\r\n        else\r\n            setPosts({ photosCollection: photosCollection.filter(item => item._id != content._id) })\r\n        deletePostById(content._id).then(() => {\r\n\r\n\r\n        }).catch(e => {\r\n            alert(\"Error while deleting the Post, generally check your internet\");\r\n            console.log(e, content);\r\n            if (pathname == \"/\") {\r\n                setPosts(prevPost => [...prevPost, content])\r\n                // window.location = pathname\r\n            }\r\n            else\r\n                setPosts({ photosCollection: photosCollection.push(content) })\r\n\r\n        })\r\n    }\r\n\r\n    return ReactDom.createPortal(\r\n        <>\r\n            <div className=\"modal-layout\" onClick={onClose}></div>\r\n            <div className=\"modal-box\">\r\n                <ul className=\"modal-box__list\">\r\n                    <li className=\"modal-box__item\" ><Link target=\"_blanck\" to={`/user/${content?.author}`} >Share</Link></li>\r\n                    {content.author != user.username && <li className=\"modal-box__item u-text-red-bold\" onClick={unfollow} >Unfollow</li>}\r\n                    {content.author == user.username && < li className=\"modal-box__item u-text-red-bold\" onClick={deletePost} >Delete Post</li>}\r\n                    {content.author != user.username && <li className=\"modal-box__item u-text-red-bold\" onClick={notLikedPost} >I don't link this Post</li>}\r\n                    <li className=\"modal-box__item\" onClick={onClose}>Cancel</li>\r\n                </ul>\r\n            </div>\r\n        </>,\r\n        document.getElementById(\"modal\")\r\n    )\r\n}\r\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { faEllipsisV, faHamburger } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DEFAULT_IMAGE_PATH } from '../../constants/paths';\nimport { deletePostById } from '../../services/postServices';\nimport PostModal from './postModal';\n\nexport default function Header({ username, profileImg, content, setProfile, photosCollection }) {\n  const [isModal, setModal] = useState(false)\n\n  return (\n    <div className=\"post__header\">\n\n      <Link to={`/user/${username}`} className=\"flex items-center\">\n        <img\n          className=\"post__header--img\"\n          src={profileImg ? profileImg : DEFAULT_IMAGE_PATH}\n          alt={`${username} profile picture`}\n        />\n        <p className=\"font-bold\">{username}</p>\n      </Link>\n      <div onClick={() => setModal(true)}><FontAwesomeIcon icon={faEllipsisV} /></div>\n      <PostModal content={content} open={isModal} onClose={() => setModal(false)} setProfile={setProfile} photosCollection={photosCollection} />\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  username: PropTypes.string.isRequired\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function Image({ files, caption }) {\n  const [counter, setCounter] = useState(0)\n  const increase = () => {\n    if (counter == files.length - 1) return null\n    setCounter(counter + 1)\n  }\n  const decrease = () => {\n    if (counter == 0) return null\n    setCounter(counter - 1)\n  }\n\n  return (\n    <div className=\"image-slider\">\n      <div className=\"image-slider__box\">\n        <img src={files[counter]} alt={caption} />\n        <>\n          {counter < (files.length - 1) &&\n            (\n              <button className=\"image-slider__btn image-slider__btn-inc\" onClick={increase}>\n                <FontAwesomeIcon icon={faArrowRight} />\n              </button>\n            )\n          }</>\n        {counter !== 0 && <button className=\"image-slider__btn image-slider__btn-dec\" onClick={decrease}>\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </button>}\n      </div>\n\n    </div>\n  );\n}\n\nImage.propTypes = {\n  files: PropTypes.array.isRequired,\n  caption: PropTypes.string.isRequired\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\n\nexport default function Footer({ caption, username }) {\n  const [newCap, setNewCap] = useState(\"\")\n  useEffect(() => {\n    setNewCap(caption.replace('\\n', '\\r'))\n  }, [caption])\n  return (\n    <div className=\"post__footer\">\n      <span className=\"post__footer--name\">{username}</span>\n      <span className=\"post__footer--caption\">{newCap}</span>\n    </div>\n  );\n}\n\nFooter.propTypes = {\n  caption: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired\n};\n","import React, { useContext } from 'react'\r\nimport { useState } from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport LoggedInUserContext from '../../context/logged-in-user'\r\nimport { deletePostById } from '../../services/postServices'\r\nimport usePhotos from '../../hooks/use-photos'\r\nimport { DASHBOARD } from '../../constants/routes'\r\nimport TimeLineContext from '../../context/timeline'\r\nimport { DEFAULT_IMAGE_PATH } from '../../constants/paths'\r\n\r\nexport default function PayModal({ open, onClose, }) {\r\n    const [profileImg, setProfileImg] = useState()\r\n    const { user } = useContext(LoggedInUserContext)\r\n    const { posts, setPosts } = useContext(TimeLineContext)\r\n    const { pathname } = useLocation()\r\n\r\n    if (!open) return null\r\n\r\n\r\n\r\n    return ReactDom.createPortal(\r\n        <>\r\n            <div className=\"modal-layout\" onClick={onClose}></div>\r\n            <div className=\"modal-box\">\r\n                <ul className=\"modal-box__list\">\r\n                    <div className=\"post__header\">\r\n                        <Link to={`/user/${user.username}`} className=\"flex items-center\">\r\n                            <img\r\n                                className=\"post__header--img\"\r\n                                src={user?.displayImg ? user.displayImg.profileImg : DEFAULT_IMAGE_PATH}\r\n                                alt={`${user.username} profile picture`}\r\n                            />\r\n                            <p className=\"font-bold\">{user.username}</p>\r\n                        </Link>\r\n                    </div>\r\n                    <li className=\"modal-box__item u-text-red-bold\" >\r\n                        <button className=\"btn btn-login\" >Pay</button>\r\n                    </li>\r\n                    <li className=\"modal-box__item\" onClick={onClose}>Cancel</li>\r\n                </ul>\r\n            </div>\r\n        </>,\r\n        document.getElementById(\"modal\")\r\n    )\r\n}\r\n","import { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './header';\nimport Image from './image';\nimport Actions from './actions';\nimport Footer from './footer';\nimport Comments from './comments';\nimport { getuserDisplayImgs } from '../../services/userServices';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\nimport PayModal from './payModel';\n\nexport default function Post({ content, postref, setProfile, photosCollection }) {\n  const commentInput = useRef(null);\n  const [profileImg, setProfileImg] = useState()\n  const [payModel, setPayModel] = useState()\n  const handleFocus = () => commentInput.current.focus();\n\n  const { files, caption, author, paid } = content.post\n\n  useEffect(async () => {\n    const { displayImg } = await getuserDisplayImgs(author)\n    setProfileImg(displayImg.profileImg);\n  }, [])\n\n  const handlePay = () => {\n    setPayModel(true)\n  }\n\n  // const result = caption.charCodeAt(0)\n  // console.log(caption, result);\n  // components\n  // -> header, image, actions (like & comment icons), footer, comments\n  return (\n    <div ref={postref} className=\"post\">\n      <Header content={content.post} username={author} profileImg={profileImg} setProfile={setProfile} photosCollection={photosCollection} />\n      {!content.post.paid.isPaid ? (\n        <Image files={files} caption={author} />\n      ) : (\n        content.hasPaid ? (\n          <Image files={files} caption={author} />\n        ) : (\n          <div className=\"not-paid\">\n            <FontAwesomeIcon className=\"not-paid__lock\" icon={faLock} />\n            <button onClick={handlePay} className=\"btn btn-login not-paid__price\">Pay {paid.price} to See User's Post </button>\n            <PayModal onClose={() => setPayModel(false)} open={payModel} />\n          </div>\n        )\n      )\n      }\n\n      {/* <Image files={files} caption={content.author} /> */}\n      {/* <Actions\n        docId={content.docId}\n        totalLikes={content.likes.length}\n        likedPhoto={content.userLikedPhoto}\n        handleFocus={handleFocus}\n      /> */}\n      <Footer caption={caption} username={author} />\n      {/* <Comments\n        docId={content.docId}\n        comments={content.comments}\n        posted={content.dateCreated}\n        commentInput={commentInput}\n      /> */}\n    </div>\n  );\n}\n\nPost.propTypes = {\n  content: PropTypes.shape({\n    author: PropTypes.string.isRequired,\n    files: PropTypes.array.isRequired,\n    caption: PropTypes.string.isRequired,\n    // docId: PropTypes.string.isRequired,\n    // userLikedPhoto: PropTypes.bool.isRequired,\n    // likes: PropTypes.array.isRequired,\n    // comments: PropTypes.array.isRequired,\n    date: PropTypes.string.isRequired\n  })\n};\n","import { useReducer, useEffect, useContext, useState, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './header';\nimport Skeleton from 'react-loading-skeleton';\nimport Post from '../post';\nimport { getUserPhotosByUsername } from '../../services/postServices';\nimport { getuserDisplayImgs } from '../../services/userServices';\nimport { NEWPOST } from '../../constants/routes';\nimport TimeLineContext from '../../context/timeline';\nimport LoggedInUserContext from '../../context/logged-in-user';\nimport useProfilePost from '../../hooks/useProfilePost';\n\nexport default function Profile({ user }) {\n  const [pageNumber, setPageNumber] = useState(1)\n  const { user: logginUser } = useContext(LoggedInUserContext)\n  const { posts, loading, hasMore, error, setPosts } = useProfilePost(user, logginUser?._id, pageNumber);\n  const reducer = (state, newState) => ({ ...state, ...newState });\n\n  const observer = useRef()\n  const lastPostRef = useCallback(node => {\n    if (loading) return\n    if (observer.current) observer.current.disconnect()\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prePage => prePage + 1)\n      }\n    })\n    if (node) observer.current.observe(node)\n  }, [loading, hasMore])\n\n  const initialState = {\n    profile: {},\n    photosCollection: null,\n    followerCount: 0,\n    displayImgs: {}\n  };\n  const [{ profile, photosCollection, followerCount, displayImgs }, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n\n  useEffect(() => {\n    async function getProfileInfoAndPhotos() {\n      console.log(posts);\n      const { displayImg } = await getuserDisplayImgs(user.username)\n      dispatch({ profile: user, photosCollection: posts, followerCount: user.followers.length, displayImgs: displayImg });\n    }\n    getProfileInfoAndPhotos();\n  }, [user, pageNumber, logginUser]);\n  console.log(posts, photosCollection);\n  return (\n    <>\n      <TimeLineContext.Provider value={{ user, posts: posts, setPosts: dispatch }}>\n        <Header\n          photosCount={photosCollection ? photosCollection.length : 0}\n          profile={profile}\n          followerCount={followerCount}\n          displayImgs={displayImgs}\n          setProfile={dispatch}\n        />\n        {!posts ? (\n          <Skeleton count={4} width={640} height={500} className=\"mb-5\" />\n        ) : (\n          <>\n            {posts.length ?\n              (posts.map((content, index) => {\n                if (posts.length === index + 1) {\n                  return <Post postref={lastPostRef} key={content?.post._id} content={content} />\n                }\n                else {\n                  return <Post key={content?.post._id} content={content} profileImg={displayImgs.profileImg} />\n                }\n              })\n                // posts.map((content) => <Post key={content._id} content={content} profileImg={displayImgs.profileImg} setProfile={dispatch} photosCollection={photosCollection} />)\n              ) : (\n                <div className=\"nopost\">\n                  <div className=\"nopost-no heading-main\">No Post</div>\n                  <div className=\"nopost-to\"><a href={NEWPOST}>Click Here</a> To Post</div>\n                </div>\n              )} </>)}\n      </TimeLineContext.Provider>\n    </>\n  );\n}\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    date: PropTypes.number,\n    email: PropTypes.string,\n    followers: PropTypes.array,\n    following: PropTypes.array,\n    fullName: PropTypes.string,\n    _id: PropTypes.string,\n    username: PropTypes.string\n  })\n};\n","import { useState, useEffect } from 'react';\r\nimport { getPost, getUserPhotosByUsername, retrivePostByUserId } from '../services/postServices';\r\n\r\nexport default function useProfilePost(user, logginUserId, pageNumber) {\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n    const [posts, setPosts] = useState([]);\r\n    const [hasMore, setMore] = useState(false)\r\n\r\n    useEffect(async () => {\r\n        setLoading(true)\r\n        setError(false)\r\n        async function getProfilePost() {\r\n\r\n            try {\r\n                const post = await getUserPhotosByUsername(user.username, logginUserId, pageNumber, 5);\r\n                console.log(post);\r\n                setPosts(prevPost => { return [...prevPost, ...post.result] });\r\n                setMore(post.result.length > 0)\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setError(true)\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        getProfilePost();\r\n    }, [user, pageNumber, logginUserId]);\r\n    return { posts, loading, error, hasMore, setPosts };\r\n}\r\n","import { useParams, useHistory } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getusersFollowing, getusersFollowers, getUserByUsername } from '../services/userServices'\nimport * as ROUTES from '../constants/routes';\nimport Header from '../components/header';\nimport UserProfile from '../components/profile';\n\nexport default function Profile() {\n  const { username } = useParams();\n  const [user, setUser] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n\n    async function checkUserExists() {\n      const user = await getUserByUsername(username);\n      const followers = await getusersFollowers(username);\n      const following = await getusersFollowing(username);\n      if (user?._id) {\n        setUser({ ...user, followers: followers, following: following });\n\n      } else {\n        history.push(ROUTES.NOT_FOUND);\n      }\n    }\n    checkUserExists();\n  }, [username, history]);\n\n  return user?.username ? (\n    <div className=\"bg-gray-background\">\n      <div className=\"mx-auto max-w-screen-lg\">\n        <UserProfile user={user} />\n      </div>\n    </div>\n  ) : null;\n}\n","import axios from 'axios';\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = apiUrl + \"/post\";\r\n\r\nexport const postByUsername = async (files, title, caption, username, paid, price, progress) => {\r\n    try {\r\n        const { data } = await axios.post(`${apiEndpoint}/${username}`,\r\n            { files, title, caption, paid, price }, progress);\r\n        return { data };\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const retrivePostByUsername = async (username) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const getUserMaterialByUsername = async (username, logginUserId, pageNumber, limit) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/user-material/${username}`,\r\n            {\r\n                params: { page: pageNumber, limit: limit, logginUserId: logginUserId }\r\n            });\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n};\r\nexport const getMaterialByTitle = async (title) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/title/${title}`\r\n        );\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nexport const buyMaterialById = async (materialId, userId, username, author) => {\r\n    try {\r\n        const response = await axios.post(`${apiEndpoint}/buy-material/${materialId}`,\r\n            {\r\n                username, author, userId\r\n            })\r\n        return response.data\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getUserPurcMaterialByUserId = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/get-purc-material/${userId}`)\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n};\r\n\r\nexport const getUserPhotosByUsername = async (username, logginUserId, pageNumber, limit) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/user-posts/${username}`,\r\n            {\r\n                params: { page: pageNumber, limit: limit, logginUserId: logginUserId }\r\n            });\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n};\r\n\r\nexport const addReview = async (message, userId, materialId) => {\r\n    try {\r\n        const response = await axios.post(`${apiEndpoint}/add-review/${materialId}`,\r\n            { message, userId }\r\n        );\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nexport const getReviewByMaterialId = async (materialId) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/get-review/${materialId}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nexport const retrivePostByUserId = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/userId/${userId}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const getPost = async (userId, page, limit) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/all-posts/${userId}`, {\r\n            params: { page: page, limit: limit }\r\n        });\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const deletePostById = async (postId) => {\r\n    try {\r\n        const response = await axios.delete(`${apiEndpoint}/delete/${postId}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        return err.response.data.error;\r\n    }\r\n};","import axios from 'axios';\r\nimport { apiUrl } from \"../config.json\";\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst apiEndpoint = apiUrl + \"/user\";\r\nconst tokenKey = \"token\"\r\n\r\nexport const getUserByUsername = async (usernameOrEmail) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/username/${usernameOrEmail}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n}\r\n\r\nexport const searchUser = async (usernameOrname, pageNumber, limit, cancel) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/search/${usernameOrname}`, {\r\n            params: { page: pageNumber, limit: limit },\r\n            cancelToken: new axios.CancelToken(c => cancel = c)\r\n        });\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n}\r\n\r\nexport const updateProfileImg = async (username, profileImg) => {\r\n    try {\r\n        const response = await axios.put(`${apiEndpoint}/profile-img/${username}`,\r\n            { profileImg }\r\n        );\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n};\r\n\r\nexport const removeProfileImg = async (username, profileImg) => {\r\n    try {\r\n        const response = await axios.delete(`${apiEndpoint}/profile-img/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n};\r\n\r\nexport const getuserDisplayImgs = async (username) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/display-imgs/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n};\r\n\r\nexport const getusersFollowing = async (usernameOrEmail) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/username/following/${usernameOrEmail}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n}\r\n\r\nexport const getusersFollowers = async (usernameOrEmail) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/username/followers/${usernameOrEmail}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n}\r\n\r\nexport const toggleFollow = async (isFollowingProfile,\r\n    profileUserId,\r\n    followingUserId) => {\r\n    if (isFollowingProfile) {\r\n        console.log(\"unfollwing\");\r\n        //remove followingUserId from profileUserId's follower list\r\n        //remove profileUserId from followingUserId's following list\r\n        await axios.put(`${apiEndpoint}/unfollow/${profileUserId}`, {\r\n            followingUserId\r\n        })\r\n    }\r\n    else {\r\n        console.log(\"follow\");\r\n        //add followingUserId in profileUserId's follower list\r\n        //add profileUserId's from followingUserId's following list\r\n        await axios.put(`${apiEndpoint}/follow/${profileUserId}`, {\r\n            followingUserId\r\n        })\r\n\r\n    }\r\n}","import { createContext } from 'react';\n\nconst LoggedInUserContext = createContext(null);\nexport default LoggedInUserContext;\n","export const DEFAULT_IMAGE_PATH = '/images/avatars/default.png';\nexport const LOADING_ANI_PATH = '/loading.svg';\n","import { useState, useEffect } from 'react';\nimport { getUserByUsername, getusersFollowers, getusersFollowing, getuserDisplayImgs } from '../services/userServices';\n\nexport default function useUser(username) {\n  const [activeUser, setActiveUser] = useState();\n\n  useEffect(() => {\n    async function getUserObjByUserId(username) {\n      const user = await getUserByUsername(username);\n      const followers = await getusersFollowers(username);\n      const following = await getusersFollowing(username);\n      const { displayImg } = await getuserDisplayImgs(username);\n      console.log(displayImg);\n      setActiveUser({ ...user, followers: followers, following: following, displayImg: displayImg } || {});\n    }\n\n    if (username) {\n      getUserObjByUserId(username);\n    }\n  }, [username]);\n  console.log(activeUser);\n  return { user: activeUser, setActiveUser };\n}\n"],"sourceRoot":""}