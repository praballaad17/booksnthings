{"version":3,"sources":["hooks/use-photos.js","context/timeline.js","components/post/postModal.js","components/post/header.js","components/post/image.js","components/post/footer.js","components/post/index.js","components/timeline.js","services/postServices.js"],"names":["usePhotos","user","pageNumber","useState","loading","setLoading","error","setError","posts","setPosts","hasMore","setMore","useEffect","getTimelinePhotos","a","following","length","getPost","_id","post","sortedPost","results","sort","b","dateA","Date","date","prevPost","console","log","userId","TimeLineContext","createContext","PostModal","open","content","onClose","photosCollection","setProfile","useContext","LoggedInUserContext","pathname","useLocation","unfollow","ReactDom","createPortal","className","onClick","target","to","author","username","filter","item","deletePostById","then","catch","e","alert","push","localStorage","setItem","JSON","stringify","postId","document","getElementById","Header","profileImg","isModal","setModal","src","DEFAULT_IMAGE_PATH","alt","icon","faEllipsisV","Image","files","caption","counter","setCounter","faArrowRight","faArrowLeft","Footer","newCap","setNewCap","replace","Post","postref","useRef","setProfileImg","getuserDisplayImgs","displayImg","ref","Timeline","setPageNumber","searchToggle","setSearchToggle","observer","lastPostRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prePage","observe","Provider","value","faSearch","map","index","count","width","height","apiEndpoint","apiUrl","postByUsername","progress","axios","data","Error","response","getUserPhotosByUsername","get","page","limit","params","delete"],"mappings":"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","file":"static/js/8.684ad80d.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { getPost, retrivePostByUserId } from '../services/postServices';\n\nexport default function usePhotos(user, pageNumber) {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  const [posts, setPosts] = useState([]);\n  const [hasMore, setMore] = useState(false)\n\n  useEffect(async () => {\n    setLoading(true)\n    setError(false)\n    async function getTimelinePhotos() {\n\n      // does the user actually follow people?\n      if (user?.following?.length > 0) {\n        try {\n          const post = await getPost(user._id, pageNumber, 5);\n\n          // re-arrange array to be newest photos first by dateCreated\n          const sortedPost = post.results.sort((a, b) => {\n            const dateA = new Date(a.date), dateB = new Date(b.date)\n            return dateB - dateA\n          })\n          setPosts(prevPost => { return [...prevPost, ...sortedPost] });\n          setMore(post.results.length > 0)\n          setLoading(false)\n        } catch (error) {\n          setError(true)\n          console.log(error);\n        }\n      }\n    }\n\n    getTimelinePhotos();\n  }, [user?.userId, user?.following, pageNumber]);\n\n  return { posts, loading, error, hasMore, setPosts };\n}\n","import { createContext } from 'react';\r\n\r\nconst TimeLineContext = createContext(null);\r\nexport default TimeLineContext;\r\n","import React, { useContext } from 'react'\r\nimport { useState } from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport LoggedInUserContext from '../../context/logged-in-user'\r\nimport { deletePostById } from '../../services/postServices'\r\nimport usePhotos from '../../hooks/use-photos'\r\nimport { DASHBOARD } from '../../constants/routes'\r\nimport TimeLineContext from '../../context/timeline'\r\n\r\nexport default function PostModal({ open, content, onClose, setProfile, photosCollection }) {\r\n    const [profileImg, setProfileImg] = useState()\r\n    const { user } = useContext(LoggedInUserContext)\r\n    const { posts, setPosts } = useContext(TimeLineContext)\r\n    const { pathname } = useLocation()\r\n\r\n    if (!open) return null\r\n\r\n    const unfollow = async () => {\r\n        // try {\r\n        //     await toggleFollow(true, content.author, user._id)\r\n        //     window.location = `/user/${user.username}`\r\n        // } catch (error) {\r\n        //     console.log(error);\r\n        // }\r\n    }\r\n\r\n    const notLikedPost = () => {\r\n        localStorage.setItem(\"dontLikePost\", JSON.stringify({ postId: content._id, author: content.author }))\r\n        setPosts(posts.filter(item => item._id != content._id))\r\n        onClose()\r\n    }\r\n\r\n    const deletePost = () => {\r\n        if (pathname == \"/\") {\r\n            setPosts(posts.filter(item => item._id != content._id))\r\n            // window.location = pathname\r\n        }\r\n        else\r\n            setPosts({ photosCollection: photosCollection.filter(item => item._id != content._id) })\r\n        deletePostById(content._id).then(() => {\r\n\r\n\r\n        }).catch(e => {\r\n            alert(\"Error while deleting the Post, generally check your internet\");\r\n            console.log(e, content);\r\n            if (pathname == \"/\") {\r\n                setPosts(prevPost => [...prevPost, content])\r\n                // window.location = pathname\r\n            }\r\n            else\r\n                setPosts({ photosCollection: photosCollection.push(content) })\r\n\r\n        })\r\n    }\r\n\r\n    return ReactDom.createPortal(\r\n        <>\r\n            <div className=\"modal-layout\" onClick={onClose}></div>\r\n            <div className=\"modal-box\">\r\n                <ul className=\"modal-box__list\">\r\n                    <li className=\"modal-box__item\" ><Link target=\"_blanck\" to={`/user/${content?.author}`} >Share</Link></li>\r\n                    {content.author != user.username && <li className=\"modal-box__item u-text-red-bold\" onClick={unfollow} >Unfollow</li>}\r\n                    {content.author == user.username && < li className=\"modal-box__item u-text-red-bold\" onClick={deletePost} >Delete Post</li>}\r\n                    {content.author != user.username && <li className=\"modal-box__item u-text-red-bold\" onClick={notLikedPost} >I don't link this Post</li>}\r\n                    <li className=\"modal-box__item\" onClick={onClose}>Cancel</li>\r\n                </ul>\r\n            </div>\r\n        </>,\r\n        document.getElementById(\"modal\")\r\n    )\r\n}\r\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { faEllipsisV, faHamburger } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DEFAULT_IMAGE_PATH } from '../../constants/paths';\nimport { deletePostById } from '../../services/postServices';\nimport PostModal from './postModal';\n\nexport default function Header({ username, profileImg, content, setProfile, photosCollection }) {\n  const [isModal, setModal] = useState(false)\n\n  return (\n    <div className=\"post__header\">\n\n      <Link to={`/user/${username}`} className=\"flex items-center\">\n        <img\n          className=\"post__header--img\"\n          src={profileImg ? profileImg : DEFAULT_IMAGE_PATH}\n          alt={`${username} profile picture`}\n        />\n        <p className=\"font-bold\">{username}</p>\n      </Link>\n      <div onClick={() => setModal(true)}><FontAwesomeIcon icon={faEllipsisV} /></div>\n      <PostModal content={content} open={isModal} onClose={() => setModal(false)} setProfile={setProfile} photosCollection={photosCollection} />\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  username: PropTypes.string.isRequired\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function Image({ files, caption }) {\n  const [counter, setCounter] = useState(0)\n  const increase = () => {\n    if (counter == files.length - 1) return null\n    setCounter(counter + 1)\n  }\n  const decrease = () => {\n    if (counter == 0) return null\n    setCounter(counter - 1)\n  }\n\n  return (\n    <div className=\"image-slider\">\n      <div className=\"image-slider__box\">\n        <img src={files[counter]} alt={caption} />\n        <>\n          {counter < (files.length - 1) &&\n            (\n              <button className=\"image-slider__btn image-slider__btn-inc\" onClick={increase}>\n                <FontAwesomeIcon icon={faArrowRight} />\n              </button>\n            )\n          }</>\n        {counter !== 0 && <button className=\"image-slider__btn image-slider__btn-dec\" onClick={decrease}>\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </button>}\n      </div>\n\n    </div>\n  );\n}\n\nImage.propTypes = {\n  files: PropTypes.array.isRequired,\n  caption: PropTypes.string.isRequired\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\n\nexport default function Footer({ caption, username }) {\n  const [newCap, setNewCap] = useState(\"\")\n  useEffect(() => {\n    setNewCap(caption.replace('\\n', '\\r'))\n  }, [caption])\n  return (\n    <div className=\"post__footer\">\n      <span className=\"post__footer--name\">{username}</span>\n      <span className=\"post__footer--caption\">{newCap}</span>\n    </div>\n  );\n}\n\nFooter.propTypes = {\n  caption: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired\n};\n","import { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './header';\nimport Image from './image';\nimport Actions from './actions';\nimport Footer from './footer';\nimport Comments from './comments';\nimport { getuserDisplayImgs } from '../../services/userServices';\n\nexport default function Post({ content, postref, setProfile, photosCollection }) {\n  const commentInput = useRef(null);\n  const [profileImg, setProfileImg] = useState()\n  const handleFocus = () => commentInput.current.focus();\n\n  const { files, caption, author } = content\n\n  useEffect(async () => {\n    const { displayImg } = await getuserDisplayImgs(author)\n    setProfileImg(displayImg.profileImg);\n  }, [])\n\n  // const result = caption.charCodeAt(0)\n  // console.log(caption, result);\n  // components\n  // -> header, image, actions (like & comment icons), footer, comments\n  return (\n    <div ref={postref} className=\"post\">\n      <Header content={content} username={content.author} profileImg={profileImg} setProfile={setProfile} photosCollection={photosCollection} />\n      <Image files={files} caption={content.author} />\n      {/* <Actions\n        docId={content.docId}\n        totalLikes={content.likes.length}\n        likedPhoto={content.userLikedPhoto}\n        handleFocus={handleFocus}\n      /> */}\n      <Footer caption={caption} username={author} />\n      {/* <Comments\n        docId={content.docId}\n        comments={content.comments}\n        posted={content.dateCreated}\n        commentInput={commentInput}\n      /> */}\n    </div>\n  );\n}\n\nPost.propTypes = {\n  content: PropTypes.shape({\n    author: PropTypes.string.isRequired,\n    files: PropTypes.array.isRequired,\n    caption: PropTypes.string.isRequired,\n    // docId: PropTypes.string.isRequired,\n    // userLikedPhoto: PropTypes.bool.isRequired,\n    // likes: PropTypes.array.isRequired,\n    // comments: PropTypes.array.isRequired,\n    date: PropTypes.string.isRequired\n  })\n};\n","import { faArrowLeft, faBackward, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useCallback, useContext, useRef, useState } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport TimeLineContext from '../context/timeline';\nimport LoggedInUserContext from '../context/logged-in-user';\nimport usePhotos from '../hooks/use-photos';\nimport SearchBar from './leftbar/searchBar';\nimport Post from './post';\n\nexport default function Timeline() {\n  const { user } = useContext(LoggedInUserContext);\n  const [pageNumber, setPageNumber] = useState(1)\n  const [searchToggle, setSearchToggle] = useState(false)\n\n  const { posts, loading, hasMore, error, setPosts } = usePhotos(user, pageNumber);\n\n  const observer = useRef()\n  const lastPostRef = useCallback(node => {\n    if (loading) return\n    if (observer.current) observer.current.disconnect()\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prePage => prePage + 1)\n      }\n    })\n    if (node) observer.current.observe(node)\n  }, [loading, hasMore])\n\n\n  return (\n    <TimeLineContext.Provider value={{ user, posts, setPosts }}>\n      <div className=\"container col-span-2\">\n        <div className=\"timeline__head\">\n          {!searchToggle && <h3 className=\"heading-main\">Home</h3>}\n          {searchToggle && <div className=\"timeline__head--search\">\n            <FontAwesomeIcon icon={faArrowLeft} onClick={() => { setSearchToggle(false) }} />\n            <SearchBar />\n          </div>}\n          <div className=\"timeline__head--searchbtn\">\n            <FontAwesomeIcon icon={faSearch} onClick={() => setSearchToggle(true)} />\n          </div>\n        </div>\n        {!posts ? (\n          <Skeleton count={4} width={640} height={500} className=\"mb-5\" />\n        ) : (\n          posts.map((content, index) => {\n            if (posts.length === index + 1) {\n              return <Post postref={lastPostRef} key={content?._id} content={content} />\n            }\n            else {\n              return <Post key={content?._id} content={content} />\n            }\n          })\n        )}\n        <div>{loading && (\n          <Skeleton count={4} width={640} height={500} className=\"mb-5\" />\n        )}</div>\n        <div>{error && 'Error'}</div>\n      </div>\n    </TimeLineContext.Provider >\n  );\n}\n","import axios from 'axios';\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = apiUrl + \"/post\";\r\n\r\nexport const postByUsername = async (files, caption, username, progress) => {\r\n    try {\r\n        const { data } = await axios.post(`${apiEndpoint}/${username}`,\r\n            { files, caption }, progress);\r\n        return { data };\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const retrivePostByUsername = async (username) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\n\r\nexport const getUserPhotosByUsername = async (username) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/user-posts/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const retrivePostByUserId = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/userId/${userId}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const getPost = async (userId, page, limit) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/all-posts/${userId}`, {\r\n            params: { page: page, limit: limit }\r\n        });\r\n        return response.data;\r\n    } catch (err) {\r\n        throw new Error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const deletePostById = async (postId) => {\r\n    try {\r\n        const response = await axios.delete(`${apiEndpoint}/delete/${postId}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        return err.response.data.error;\r\n    }\r\n};"],"sourceRoot":""}