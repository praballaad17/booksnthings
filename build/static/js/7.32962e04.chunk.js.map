{"version":3,"sources":["components/toggleBar.js","components/leftbar.js","pages/not-found.js","services/userServices.js","constants/paths.js","hooks/use-user.js"],"names":["ToggleBar","show","onClose","user","loggedInUser","ReactDom","createPortal","className","onClick","icon","faTimes","to","username","faUser","ROUTES","faBookmark","faList","faCog","faIdCard","faUniversity","logout","window","location","onKeyDown","event","key","faSignOutAlt","document","getElementById","Leftbar","useState","setShow","profileImg","setProfileImg","useContext","UserContext","useUser","useHistory","useEffect","a","getuserDisplayImgs","then","res","displayImg","length","DEFAULT_IMAGE_PATH","catch","err","console","log","src","onError","e","target","alt","faHome","faBell","faMailBulk","faChild","faBars","faPlus","NotFound","title","apiEndpoint","apiUrl","getUserByUsername","usernameOrEmail","axios","get","response","data","error","updateProfileImg","put","removeProfileImg","delete","getusersFollowing","getusersFollowers","toggleFollow","isFollowingProfile","profileUserId","followingUserId","LOADING_ANI_PATH","activeUser","setActiveUser","followers","following","getUserObjByUserId"],"mappings":"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","file":"static/js/7.32962e04.chunk.js","sourcesContent":["import React from 'react'\r\nimport * as ROUTES from '../constants/routes';\r\nimport { Link } from 'react-router-dom';\r\nimport { faBookmark, faCog, faIdCard, faList, faSignOutAlt, faTimes, faUniversity, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { logout } from '../services/authenticationServices';\r\nimport ReactDom from 'react-dom'\r\n\r\nexport default function ToggleBar({ show, onClose, user, loggedInUser }) {\r\n    if (!show) return null\r\n    return ReactDom.createPortal(\r\n        <>\r\n            <div className=\"togglebar-overlay\" onClick={onClose}></div>\r\n            <div className=\"toggle-sidebar\">\r\n                <div className=\"toggle-sidebar__close\" onClick={onClose}>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n                <ul>\r\n                    <li className=\"toggle-sidebar__item\">\r\n                        <Link className=\"toggle-sidebar__link\" to={`/user/${user?.username}`} aria-label=\"Dashboard\">\r\n                            <span className=\"toggle-sidebar__link--icon\">\r\n                                <FontAwesomeIcon icon={faUser} /></span>\r\n                            <span className=\"toggle-sidebar__link--text\">Profile</span>\r\n                        </Link>\r\n                    </li>\r\n                    {loggedInUser ? (\r\n                        <>\r\n                            <li className=\"toggle-sidebar__item\">\r\n                                <Link className=\"toggle-sidebar__link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                    <span className=\"toggle-sidebar__link--icon\">\r\n                                        <FontAwesomeIcon icon={faBookmark} />\r\n                                    </span>\r\n                                    <span className=\"toggle-sidebar__link--text\">Bookmarks</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"toggle-sidebar__item\">\r\n                                <Link className=\"toggle-sidebar__link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                    <span className=\"toggle-sidebar__link--icon\">\r\n                                        <FontAwesomeIcon icon={faList} />\r\n                                    </span>\r\n                                    <span className=\"toggle-sidebar__link--text\">List</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"toggle-sidebar__item\">\r\n                                <Link className=\"toggle-sidebar__link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                    <span className=\"toggle-sidebar__link--icon\">\r\n                                        <FontAwesomeIcon icon={faCog} />\r\n                                    </span>\r\n                                    <span className=\"toggle-sidebar__link--text\">Settings</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"toggle-sidebar__item\">\r\n                                <Link className=\"toggle-sidebar__link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                    <span className=\"toggle-sidebar__link--icon\">\r\n                                        <FontAwesomeIcon icon={faIdCard} />\r\n                                    </span>\r\n                                    <span className=\"toggle-sidebar__link--text\">Your Cards</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"toggle-sidebar__item\">\r\n                                <Link className=\"toggle-sidebar__link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                    <span className=\"toggle-sidebar__link--icon\">\r\n                                        <FontAwesomeIcon icon={faUniversity} />\r\n                                    </span>\r\n                                    <span className=\"toggle-sidebar__link--text\">Add Bank</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"toggle-sidebar__item\"\r\n                                onClick={() => {\r\n                                    logout();\r\n                                    window.location = ROUTES.LOGIN\r\n                                }}\r\n                                onKeyDown={(event) => {\r\n                                    if (event.key === 'Enter') {\r\n                                        logout();\r\n                                        window.location = ROUTES.LOGIN\r\n                                    }\r\n                                }}>\r\n                                <div className=\"toggle-sidebar__link\" >\r\n                                    <span className=\"toggle-sidebar__link--icon\">\r\n                                        <FontAwesomeIcon icon={faSignOutAlt} />\r\n                                    </span>\r\n                                    <span className=\"toggle-sidebar__link--text\">Log Out</span>\r\n                                </div>\r\n                            </li>\r\n                        </>) : (\r\n                        <li className=\"link-list-item link-list-item--newpost\" >\r\n                            <Link className=\"link\" to={ROUTES.LOGIN} aria-label=\"Newpost\">\r\n                                <span className=\"link--icon\">\r\n                                    <FontAwesomeIcon icon={faSignOutAlt} /></span>\r\n                                <span className=\"link--text\">Log In</span>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                    }                    </ul>\r\n            </div>\r\n        </>,\r\n        document.getElementById(\"togglebar\")\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport * as ROUTES from '../constants/routes';\r\nimport { Link, Route, useHistory } from 'react-router-dom';\r\nimport { faBars, faBell, faBookmark, faChild, faCog, faHome, faIdCard, faList, faMailBulk, faPlus, faSignOutAlt, faUniversity, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport UserContext from '../context/user';\r\nimport useUser from '../hooks/use-user';\r\nimport ToggleBar from './toggleBar';\r\nimport { getuserDisplayImgs } from '../services/userServices';\r\nimport { useEffect } from 'react';\r\nimport { DEFAULT_IMAGE_PATH } from '../constants/paths';\r\n\r\nexport default function Leftbar() {\r\n    const [show, setShow] = useState(false)\r\n    const [profileImg, setProfileImg] = useState()\r\n    const { user: loggedInUser } = useContext(UserContext);\r\n    const { user } = useUser(loggedInUser?.username);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(async () => {\r\n        await getuserDisplayImgs(user?.username).then((res) => {\r\n            !res.displayImg || res.displayImg.profileImg.length ?\r\n                setProfileImg(res.displayImg.profileImg)\r\n                :\r\n                setProfileImg(DEFAULT_IMAGE_PATH)\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n\r\n        // setProfileImg(result?.displayImg?.profileImg)\r\n\r\n    }, [user])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"leftbar__toglebar\">\r\n                <ToggleBar show={show} user={user} loggedInUser={loggedInUser} onClose={() => setShow(false)} />\r\n            </div>\r\n\r\n            <div className=\"leftbar\">\r\n                <ul className=\"link-list\">\r\n                    <li className=\"link-list-item\">\r\n                        <Link className=\"u-center-text\" to={`/user/${user?.username}`} aria-label=\"Profile\">\r\n                            <img className=\"link-list--proImg\" src={profileImg} onError={(e) => {\r\n                                e.target.src = DEFAULT_IMAGE_PATH;\r\n                            }} alt={user?.username} />\r\n                            <span className=\"link--text\">{user?.username}</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"link-list-item\">\r\n                        <Link className=\"link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                            <span className=\"link--icon\">\r\n                                <FontAwesomeIcon icon={faHome} /></span>\r\n                            <span className=\"link--text\">Home</span>\r\n                        </Link>\r\n                    </li>\r\n                    {loggedInUser && <> <li className=\"link-list-item\">\r\n                        <Link className=\"link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                            <span className=\"link--icon\">\r\n                                <FontAwesomeIcon icon={faBell} />\r\n                            </span>\r\n                            <span className=\"link--text\">Notifications</span>\r\n                        </Link>\r\n                    </li>\r\n                        <li className=\"link-list-item\">\r\n                            <Link className=\"link\" to={`${ROUTES.MESSAGES}`} aria-label=\"Messages\">\r\n                                <span className=\"link--icon\">\r\n                                    <FontAwesomeIcon icon={faMailBulk} />\r\n                                </span>\r\n                                <span className=\"link--text\">Messages</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"link-list-item\">\r\n                            <Link className=\"link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                <span className=\"link--icon\"><FontAwesomeIcon icon={faBookmark} /></span>\r\n                                <span className=\"link--text\">Bookmarks</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"link-list-item\">\r\n                            <Link className=\"link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                <span className=\"link--icon\">\r\n                                    <FontAwesomeIcon icon={faList} /></span>\r\n                                <span className=\"link--text\">List</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"link-list-item\">\r\n                            <Link className=\"link\" to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                <span className=\"link--icon\">\r\n                                    <FontAwesomeIcon icon={faChild} /></span>\r\n                                <span className=\"link--text\">Subscription</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"link-list-item\">\r\n                            <Link className=\"link\" to={`/user/${user?.username}`} aria-label=\"Dashboard\">\r\n                                <span className=\"link--icon\">\r\n                                    <FontAwesomeIcon icon={faUser} /></span>\r\n                                <span className=\"link--text\">My Profile</span>\r\n                            </Link>\r\n                        </li>\r\n                    </>\r\n                    }\r\n                    <li className=\"link-list-item\" onClick={() => setShow(true)}>\r\n                        <Link className=\"link\"  >\r\n                            <span className=\"link--icon\">\r\n                                <FontAwesomeIcon icon={faBars} /></span>\r\n                            <span className=\"link--text\">More</span>\r\n                        </Link>\r\n                    </li>\r\n                    {loggedInUser ? (\r\n                        <li className=\"link-list-item link-list-item--newpost\" >\r\n                            <Link className=\"link\" to={ROUTES.NEWPOST} aria-label=\"Newpost\">\r\n                                <span className=\"link--icon\">\r\n                                    <FontAwesomeIcon icon={faPlus} /></span>\r\n                                <span className=\"link--text\">New Post</span>\r\n                            </Link>\r\n                        </li>) : (\r\n                        <li className=\"link-list-item link-list-item--newpost\" >\r\n                            <Link className=\"link\" to={ROUTES.LOGIN} aria-label=\"Newpost\">\r\n                                <span className=\"link--icon\">\r\n                                    <FontAwesomeIcon icon={faSignOutAlt} /></span>\r\n                                <span className=\"link--text\">Log In</span>\r\n                            </Link>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n","import { useEffect } from 'react';\nimport Leftbar from '../components/leftbar';\n\nexport default function NotFound() {\n  useEffect(() => {\n    document.title = 'Not Found - Touch';\n  }, []);\n\n  return (\n    <>\n      <div className=\"dashboard\">      <div className=\"dashboard__leftbar\">\n        <Leftbar />\n      </div>\n        <div className=\"mx-auto max-w-screen-lg\">\n          <p className=\"text-center text-2xl\">Not Found!</p>\n        </div>\n      </div>\n    </>\n  );\n}\n","import axios from 'axios';\r\nimport { apiUrl } from \"../config.json\";\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst apiEndpoint = apiUrl + \"/user\";\r\nconst tokenKey = \"token\"\r\n\r\nexport const getUserByUsername = async (usernameOrEmail) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/username/${usernameOrEmail}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n}\r\n\r\nexport const searchUser = async (usernameOrname, pageNumber, limit, cancel) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/search/${usernameOrname}`, {\r\n            params: { page: pageNumber, limit: limit },\r\n            cancelToken: new axios.CancelToken(c => cancel = c)\r\n        });\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n}\r\n\r\nexport const updateProfileImg = async (username, profileImg) => {\r\n    try {\r\n        const response = await axios.put(`${apiEndpoint}/profile-img/${username}`,\r\n            { profileImg }\r\n        );\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n};\r\n\r\nexport const removeProfileImg = async (username, profileImg) => {\r\n    try {\r\n        const response = await axios.delete(`${apiEndpoint}/profile-img/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n};\r\n\r\nexport const getuserDisplayImgs = async (username) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/display-imgs/${username}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n};\r\n\r\nexport const getusersFollowing = async (usernameOrEmail) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/username/following/${usernameOrEmail}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n}\r\n\r\nexport const getusersFollowers = async (usernameOrEmail) => {\r\n    try {\r\n        const response = await axios.get(`${apiEndpoint}/username/followers/${usernameOrEmail}`);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err.response?.data.error);\r\n    }\r\n}\r\n\r\nexport const toggleFollow = async (isFollowingProfile,\r\n    profileUserId,\r\n    followingUserId) => {\r\n    if (isFollowingProfile) {\r\n        console.log(\"unfollwing\");\r\n        //remove followingUserId from profileUserId's follower list\r\n        //remove profileUserId from followingUserId's following list\r\n        await axios.put(`${apiEndpoint}/unfollow/${profileUserId}`, {\r\n            followingUserId\r\n        })\r\n    }\r\n    else {\r\n        console.log(\"follow\");\r\n        //add followingUserId in profileUserId's follower list\r\n        //add profileUserId's from followingUserId's following list\r\n        await axios.put(`${apiEndpoint}/follow/${profileUserId}`, {\r\n            followingUserId\r\n        })\r\n\r\n    }\r\n}","export const DEFAULT_IMAGE_PATH = '/images/avatars/default.png';\nexport const LOADING_ANI_PATH = '/loading.svg';\n","import { useState, useEffect } from 'react';\nimport { getUserByUsername, getusersFollowers, getusersFollowing } from '../services/userServices';\n\nexport default function useUser(username) {\n  const [activeUser, setActiveUser] = useState();\n\n  useEffect(() => {\n    async function getUserObjByUserId(username) {\n      const user = await getUserByUsername(username);\n      const followers = await getusersFollowers(username);\n      const following = await getusersFollowing(username);\n      // const user = await getUserByUserId(userId);\n      // const followers = await getusersFollowersById(userId);\n      setActiveUser({ ...user, followers: followers, following: following } || {});\n    }\n\n    if (username) {\n      getUserObjByUserId(username);\n    }\n  }, [username]);\n\n  return { user: activeUser, setActiveUser };\n}\n"],"sourceRoot":""}